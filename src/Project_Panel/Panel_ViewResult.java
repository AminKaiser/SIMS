/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project_Panel;

import DatabaseConnection.DBConnectioncode;
import com.lowagie.text.BadElementException;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Element;
import com.lowagie.text.Font;
import com.lowagie.text.PageSize;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Phrase;
import com.lowagie.text.Rectangle;
import com.lowagie.text.pdf.PdfContentByte;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Amin Kaiser
 */
public class Panel_ViewResult extends javax.swing.JPanel {

    Connection con;
    PreparedStatement prepstmnt = null;
    ResultSet res = null;
    
    
    public Panel_ViewResult() {
        initComponents();
        
        try {
            con = DBConnectioncode.DBConnectioncode();

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Panel_ViewResult.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try{
            String sqlSrch = "Select distinct(session) AS Session from Session ORDER BY session ASC";
            prepstmnt=con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            while(res.next())
            {
               
                String ses=res.getString("session");
               jComboSession.addItem(ses);
               jComboSessionReport.addItem(ses);
              
            }
           
        }catch(SQLException e)
        {
        }
    }
    
    
    public void TableRefresh()
    {
        try{
                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();
                int row=jTableViewResult.getRowCount();
                for(int i=row-1;i>=0;i--)
                {
                    tb.removeRow(i);
                }
                
               
       
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    
    public void Refresh()
     {
         jComboSem.setSelectedItem("Select");
         txtName.setText("");
         txtRoll.setText("");
         txtReg.setText("");
         jComboSession.setSelectedItem("Select");
         jComboSemester.setSelectedItem("Select");
         txtCGPA.setText("");
         
         
     }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel20 = new javax.swing.JPanel();
        jLabel117 = new javax.swing.JLabel();
        jComboSem = new javax.swing.JComboBox();
        jTextFieldSearch = new javax.swing.JTextField();
        jPanel131 = new javax.swing.JPanel();
        jLabel153 = new javax.swing.JLabel();
        jLabel154 = new javax.swing.JLabel();
        jLabel155 = new javax.swing.JLabel();
        jLabel156 = new javax.swing.JLabel();
        jLabel157 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtRoll = new javax.swing.JTextField();
        txtReg = new javax.swing.JTextField();
        jComboSemester = new javax.swing.JComboBox();
        jComboSession = new javax.swing.JComboBox();
        jLabel158 = new javax.swing.JLabel();
        txtCGPA = new javax.swing.JTextField();
        jPanel121 = new javax.swing.JPanel();
        jButton126 = new javax.swing.JButton();
        jButton127 = new javax.swing.JButton();
        jButton128 = new javax.swing.JButton();
        jButton129 = new javax.swing.JButton();
        jButton130 = new javax.swing.JButton();
        jButton131 = new javax.swing.JButton();
        jPanel132 = new javax.swing.JPanel();
        jScrollPane22 = new javax.swing.JScrollPane();
        jTableViewResult = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jComboSemReport = new javax.swing.JComboBox();
        jLabel118 = new javax.swing.JLabel();
        jLabel119 = new javax.swing.JLabel();
        jComboSessionReport = new javax.swing.JComboBox();
        btnReport = new javax.swing.JButton();

        jPanel20.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel117.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel117.setText("Select Semester :");

        jComboSem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jComboSem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "1st Semester", "2nd Semester", "3rd Semester", "4th Semester", "5th Semester", "6th Semester", "7th Semester", "8th Semester" }));
        jComboSem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboSemActionPerformed(evt);
            }
        });

        jTextFieldSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel117, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jComboSem, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel117))
                    .addComponent(jComboSem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel131.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel153.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel153.setText("Name :");

        jLabel154.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel154.setText("Roll :");

        jLabel155.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel155.setText("Reg. No :");

        jLabel156.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel156.setText("Session :");

        jLabel157.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel157.setText("CGPA :");

        txtName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        txtRoll.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        txtReg.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jComboSemester.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jComboSemester.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "1st Semester", "2nd Semester", "3rd Semester", "4th Semester", "5th Semester", "6th Semester", "7th Semester", "8th Semester", "EX- Semester" }));

        jComboSession.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jComboSession.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));

        jLabel158.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel158.setText("Semester :");

        txtCGPA.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel131Layout = new javax.swing.GroupLayout(jPanel131);
        jPanel131.setLayout(jPanel131Layout);
        jPanel131Layout.setHorizontalGroup(
            jPanel131Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel131Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel131Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel131Layout.createSequentialGroup()
                        .addComponent(jLabel157, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCGPA, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel131Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel131Layout.createSequentialGroup()
                            .addComponent(jLabel153, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(4, 4, 4)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel131Layout.createSequentialGroup()
                            .addComponent(jLabel154, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(4, 4, 4)
                            .addComponent(txtRoll, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel131Layout.createSequentialGroup()
                            .addComponent(jLabel155, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(4, 4, 4)
                            .addComponent(txtReg, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel131Layout.createSequentialGroup()
                            .addComponent(jLabel156, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(4, 4, 4)
                            .addComponent(jComboSession, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel131Layout.createSequentialGroup()
                            .addComponent(jLabel158, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(4, 4, 4)
                            .addComponent(jComboSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel131Layout.setVerticalGroup(
            jPanel131Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel131Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel131Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel153, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel131Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel154, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRoll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel131Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel155, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel131Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel156, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboSession, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel131Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel158, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel131Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel157, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCGPA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel121.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton126.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton126.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project_Panel/save2.png"))); // NOI18N
        jButton126.setText("Save");
        jButton126.setEnabled(false);
        jButton126.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton126ActionPerformed(evt);
            }
        });

        jButton127.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton127.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project_Panel/Trash-can16.png"))); // NOI18N
        jButton127.setText("Delete");
        jButton127.setEnabled(false);
        jButton127.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton127ActionPerformed(evt);
            }
        });

        jButton128.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton128.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project_Panel/Update.png"))); // NOI18N
        jButton128.setText("Update");
        jButton128.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton128ActionPerformed(evt);
            }
        });

        jButton129.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton129.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project_Panel/Print.png"))); // NOI18N
        jButton129.setText("Print");
        jButton129.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton129ActionPerformed(evt);
            }
        });

        jButton130.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton130.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project_Panel/refresh.png"))); // NOI18N
        jButton130.setText("Refresh");
        jButton130.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton130ActionPerformed(evt);
            }
        });

        jButton131.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton131.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project_Panel/view.gif"))); // NOI18N
        jButton131.setText("Preview");
        jButton131.setEnabled(false);

        javax.swing.GroupLayout jPanel121Layout = new javax.swing.GroupLayout(jPanel121);
        jPanel121.setLayout(jPanel121Layout);
        jPanel121Layout.setHorizontalGroup(
            jPanel121Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel121Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton131)
                .addGap(26, 26, 26)
                .addComponent(jButton129, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton130)
                .addContainerGap())
            .addGroup(jPanel121Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jButton126, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton127)
                .addGap(18, 18, 18)
                .addComponent(jButton128)
                .addGap(22, 22, 22))
        );
        jPanel121Layout.setVerticalGroup(
            jPanel121Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel121Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel121Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton126, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton127, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton128, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel121Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton129, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton130, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton131, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel132.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTableViewResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "   Name", "   Roll ", "   Reg. No", "   Session ", "   Semester  ", "   CGPA "
            }
        ));
        jTableViewResult.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableViewResultMouseClicked(evt);
            }
        });
        jTableViewResult.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableViewResultKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableViewResultKeyReleased(evt);
            }
        });
        jScrollPane22.setViewportView(jTableViewResult);

        javax.swing.GroupLayout jPanel132Layout = new javax.swing.GroupLayout(jPanel132);
        jPanel132.setLayout(jPanel132Layout);
        jPanel132Layout.setHorizontalGroup(
            jPanel132Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel132Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane22, javax.swing.GroupLayout.DEFAULT_SIZE, 919, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel132Layout.setVerticalGroup(
            jPanel132Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel132Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane22)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jComboSemReport.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jComboSemReport.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "1st Semester", "2nd Semester", "3rd Semester", "4th Semester", "5th Semester", "6th Semester", "7th Semester", "8th Semester" }));
        jComboSemReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboSemReportActionPerformed(evt);
            }
        });

        jLabel118.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel118.setText("Select Semester :");

        jLabel119.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel119.setText("Select Session :");

        jComboSessionReport.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jComboSessionReport.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));

        btnReport.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnReport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project_Panel/Print.png"))); // NOI18N
        btnReport.setText("Report Print");
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel118, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jComboSemReport, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel119, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboSessionReport, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addComponent(btnReport)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel118))
                    .addComponent(jComboSemReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel119)
                    .addComponent(jComboSessionReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel131, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel121, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(7, 7, 7)
                .addComponent(jPanel132, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel132, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel131, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel121, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboSemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboSemActionPerformed
        DefaultTableModel tb = (DefaultTableModel) jTableViewResult.getModel();
        
        Object ViewResult = jComboSem.getSelectedItem();
        
        if(ViewResult=="1st Semester")
        {
            try{
                
                String sqlSrch = "SELECT * FROM  first_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                        String Name = res.getString("name");
                        String roll = res.getString("roll");
                        String reg = res.getString("reg");
                        String session = res.getString("session");
                        String semester = res.getString("semester");
                        String cgpa = res.getString("cgpa");

                        tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
            TableRefresh();
            
             try{
                
                String sqlSrch = "SELECT * FROM  first_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                        String Name = res.getString("name");
                        String roll = res.getString("roll");
                        String reg = res.getString("reg");
                        String session = res.getString("session");
                        String semester = res.getString("semester");
                        String cgpa = res.getString("cgpa");

                        tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
        
        
        if(ViewResult=="2nd Semester")
        {
            try{
                
                String sqlSrch = "SELECT * FROM  second_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                        String Name = res.getString("name");
                        String roll = res.getString("roll");
                        String reg = res.getString("reg");
                        String session = res.getString("session");
                        String semester = res.getString("semester");
                        String cgpa = res.getString("cgpa");

                        tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
            TableRefresh();
            
             try{
                
                String sqlSrch = "SELECT * FROM  second_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                        String Name = res.getString("name");
                        String roll = res.getString("roll");
                        String reg = res.getString("reg");
                        String session = res.getString("session");
                        String semester = res.getString("semester");
                        String cgpa = res.getString("cgpa");

                        tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
        
        if(ViewResult=="3rd Semester")
        {
            try{
                
                String sqlSrch = "SELECT * FROM  third_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                        String Name = res.getString("name");
                        String roll = res.getString("roll");
                        String reg = res.getString("reg");
                        String session = res.getString("session");
                        String semester = res.getString("semester");
                        String cgpa = res.getString("cgpa");

                        tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
            TableRefresh();
            
             try{
                
                String sqlSrch = "SELECT * FROM  third_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                        String Name = res.getString("name");
                        String roll = res.getString("roll");
                        String reg = res.getString("reg");
                        String session = res.getString("session");
                        String semester = res.getString("semester");
                        String cgpa = res.getString("cgpa");

                        tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
        
        if(ViewResult=="4th Semester")
        {
            try{
                
                String sqlSrch = "SELECT * FROM  fourth_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                        String Name = res.getString("name");
                        String roll = res.getString("roll");
                        String reg = res.getString("reg");
                        String session = res.getString("session");
                        String semester = res.getString("semester");
                        String cgpa = res.getString("cgpa");

                        tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
            TableRefresh();
            
             try{
                
                String sqlSrch = "SELECT * FROM  fourth_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                        String Name = res.getString("name");
                        String roll = res.getString("roll");
                        String reg = res.getString("reg");
                        String session = res.getString("session");
                        String semester = res.getString("semester");
                        String cgpa = res.getString("cgpa");

                        tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
        
          if(ViewResult=="5th Semester")
        {
            try{
                
                String sqlSrch = "SELECT * FROM  fifth_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                        String Name = res.getString("name");
                        String roll = res.getString("roll");
                        String reg = res.getString("reg");
                        String session = res.getString("session");
                        String semester = res.getString("semester");
                        String cgpa = res.getString("cgpa");

                        tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
            TableRefresh();
            
             try{
                
                String sqlSrch = "SELECT * FROM  fifth_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                        String Name = res.getString("name");
                        String roll = res.getString("roll");
                        String reg = res.getString("reg");
                        String session = res.getString("session");
                        String semester = res.getString("semester");
                        String cgpa = res.getString("cgpa");

                        tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
          
          
          if(ViewResult=="6th Semester")
        {
            try{
                
                String sqlSrch = "SELECT * FROM  sixth_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                        String Name = res.getString("name");
                        String roll = res.getString("roll");
                        String reg = res.getString("reg");
                        String session = res.getString("session");
                        String semester = res.getString("semester");
                        String cgpa = res.getString("cgpa");

                        tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
            TableRefresh();
            
             try{
                
                String sqlSrch = "SELECT * FROM  sixth_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                        String Name = res.getString("name");
                        String roll = res.getString("roll");
                        String reg = res.getString("reg");
                        String session = res.getString("session");
                        String semester = res.getString("semester");
                        String cgpa = res.getString("cgpa");

                        tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
          
          if(ViewResult=="7th Semester")
        {
            try{
                
                String sqlSrch = "SELECT * FROM  seventh_semster_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                        String Name = res.getString("name");
                        String roll = res.getString("roll");
                        String reg = res.getString("reg");
                        String session = res.getString("session");
                        String semester = res.getString("semester");
                        String cgpa = res.getString("cgpa");

                        tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
            TableRefresh();
            
             try{
                
                String sqlSrch = "SELECT * FROM  seventh_semster_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                        String Name = res.getString("name");
                        String roll = res.getString("roll");
                        String reg = res.getString("reg");
                        String session = res.getString("session");
                        String semester = res.getString("semester");
                        String cgpa = res.getString("cgpa");

                        tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
          
          
          
          if(ViewResult=="8th Semester")
        {
            try{
                
                String sqlSrch = "SELECT * FROM  eighth_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                        String Name = res.getString("name");
                        String roll = res.getString("roll");
                        String reg = res.getString("reg");
                        String session = res.getString("session");
                        String semester = res.getString("semester");
                        String cgpa = res.getString("cgpa");

                        tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
            TableRefresh();
            
             try{
                
                String sqlSrch = "SELECT * FROM  eighth_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                        String Name = res.getString("name");
                        String roll = res.getString("roll");
                        String reg = res.getString("reg");
                        String session = res.getString("session");
                        String semester = res.getString("semester");
                        String cgpa = res.getString("cgpa");

                        tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
    }//GEN-LAST:event_jComboSemActionPerformed

    private void jTableViewResultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableViewResultMouseClicked
        // TODO add your handling code here:
        
        Object View = jComboSem.getSelectedItem();
        if(View=="1st Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM first_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        
        if(View=="2nd Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM second_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        
        if(View=="3rd Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM third_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        if(View=="4th Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM fourth_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        if(View=="5th Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM fifth_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        if(View=="6th Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM sixth_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        if(View=="7th Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM seventh_semster_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        if(View=="8th Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM eighth_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
    }//GEN-LAST:event_jTableViewResultMouseClicked

    private void jTableViewResultKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableViewResultKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            
            Object View = jComboSem.getSelectedItem();
        if(View=="1st Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM first_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        
        if(View=="2nd Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM second_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        
        if(View=="3rd Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM third_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        if(View=="4th Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM fourth_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        if(View=="5th Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM fifth_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        if(View=="6th Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM sixth_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        if(View=="7th Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM seventh_semster_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        if(View=="8th Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM eighth_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }

        }
    }//GEN-LAST:event_jTableViewResultKeyReleased

    private void jTextFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyReleased

        Object View = jComboSem.getSelectedItem();

        if(View=="1st Semester")
        {
            try{
                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();
                int row=jTableViewResult.getRowCount();
                for(int i=row-1;i>=0;i--)
                {
                    tb.removeRow(i);
                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }

            try{

                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();

                String sqlSearch = "SELECT * FROM first_semester_result where name like '%"+jTextFieldSearch.getText()+"%' OR roll like '%"+jTextFieldSearch.getText()+"%' ORDER BY roll ASC";
                prepstmnt = con.prepareStatement(sqlSearch);
                res = prepstmnt.executeQuery();

                while(res.next())
                {
                    String Name = res.getString("name");
                    String roll = res.getString("roll");
                    String reg = res.getString("reg");
                    String session = res.getString("session");
                    String semester = res.getString("semester");
                    String cgpa = res.getString("cgpa");

                    tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }

        }
        
        
        if(View=="2nd Semester")
        {
            try{
                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();
                int row=jTableViewResult.getRowCount();
                for(int i=row-1;i>=0;i--)
                {
                    tb.removeRow(i);
                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }

            try{

                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();

                String sqlSearch = "SELECT * FROM second_semester_result where name like '%"+jTextFieldSearch.getText()+"%' OR roll like '%"+jTextFieldSearch.getText()+"%' ORDER BY roll ASC";
                prepstmnt = con.prepareStatement(sqlSearch);
                res = prepstmnt.executeQuery();

                while(res.next())
                {
                    String Name = res.getString("name");
                    String roll = res.getString("roll");
                    String reg = res.getString("reg");
                    String session = res.getString("session");
                    String semester = res.getString("semester");
                    String cgpa = res.getString("cgpa");

                    tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }

        }
        
        if(View=="3rd Semester")
        {
            try{
                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();
                int row=jTableViewResult.getRowCount();
                for(int i=row-1;i>=0;i--)
                {
                    tb.removeRow(i);
                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }

            try{

                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();

                String sqlSearch = "SELECT * FROM third_semester_result where name like '%"+jTextFieldSearch.getText()+"%' OR roll like '%"+jTextFieldSearch.getText()+"%' ORDER BY roll ASC";
                prepstmnt = con.prepareStatement(sqlSearch);
                res = prepstmnt.executeQuery();

                while(res.next())
                {
                    String Name = res.getString("name");
                    String roll = res.getString("roll");
                    String reg = res.getString("reg");
                    String session = res.getString("session");
                    String semester = res.getString("semester");
                    String cgpa = res.getString("cgpa");

                    tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }

        }
        
        
        if(View=="4th Semester")
        {
            try{
                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();
                int row=jTableViewResult.getRowCount();
                for(int i=row-1;i>=0;i--)
                {
                    tb.removeRow(i);
                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }

            try{

                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();

                String sqlSearch = "SELECT * FROM fourth_semester_result where name like '%"+jTextFieldSearch.getText()+"%' OR roll like '%"+jTextFieldSearch.getText()+"%' ORDER BY roll ASC";
                prepstmnt = con.prepareStatement(sqlSearch);
                res = prepstmnt.executeQuery();

                while(res.next())
                {
                    String Name = res.getString("name");
                    String roll = res.getString("roll");
                    String reg = res.getString("reg");
                    String session = res.getString("session");
                    String semester = res.getString("semester");
                    String cgpa = res.getString("cgpa");

                    tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }

        }
        
        if(View=="5th Semester")
        {
            try{
                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();
                int row=jTableViewResult.getRowCount();
                for(int i=row-1;i>=0;i--)
                {
                    tb.removeRow(i);
                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }

            try{

                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();

                String sqlSearch = "SELECT * FROM fifth_semester_result where name like '%"+jTextFieldSearch.getText()+"%' OR roll like '%"+jTextFieldSearch.getText()+"%' ORDER BY roll ASC";
                prepstmnt = con.prepareStatement(sqlSearch);
                res = prepstmnt.executeQuery();

                while(res.next())
                {
                    String Name = res.getString("name");
                    String roll = res.getString("roll");
                    String reg = res.getString("reg");
                    String session = res.getString("session");
                    String semester = res.getString("semester");
                    String cgpa = res.getString("cgpa");

                    tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }

        }
        
        if(View=="6th Semester")
        {
            try{
                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();
                int row=jTableViewResult.getRowCount();
                for(int i=row-1;i>=0;i--)
                {
                    tb.removeRow(i);
                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }

            try{

                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();

                String sqlSearch = "SELECT * FROM sixth_semester_result where name like '%"+jTextFieldSearch.getText()+"%' OR roll like '%"+jTextFieldSearch.getText()+"%' ORDER BY roll ASC";
                prepstmnt = con.prepareStatement(sqlSearch);
                res = prepstmnt.executeQuery();

                while(res.next())
                {
                    String Name = res.getString("name");
                    String roll = res.getString("roll");
                    String reg = res.getString("reg");
                    String session = res.getString("session");
                    String semester = res.getString("semester");
                    String cgpa = res.getString("cgpa");

                    tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }

        }
        
        if(View=="7th Semester")
        {
            try{
                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();
                int row=jTableViewResult.getRowCount();
                for(int i=row-1;i>=0;i--)
                {
                    tb.removeRow(i);
                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }

            try{

                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();

                String sqlSearch = "SELECT * FROM seventh_semester_result where name like '%"+jTextFieldSearch.getText()+"%' OR roll like '%"+jTextFieldSearch.getText()+"%' ORDER BY roll ASC";
                prepstmnt = con.prepareStatement(sqlSearch);
                res = prepstmnt.executeQuery();

                while(res.next())
                {
                    String Name = res.getString("name");
                    String roll = res.getString("roll");
                    String reg = res.getString("reg");
                    String session = res.getString("session");
                    String semester = res.getString("semester");
                    String cgpa = res.getString("cgpa");

                    tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }

        }
        
        if(View=="8th Semester")
        {
            try{
                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();
                int row=jTableViewResult.getRowCount();
                for(int i=row-1;i>=0;i--)
                {
                    tb.removeRow(i);
                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }

            try{

                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();

                String sqlSearch = "SELECT * FROM eighth_semester_result where name like '%"+jTextFieldSearch.getText()+"%' OR roll like '%"+jTextFieldSearch.getText()+"%' ORDER BY roll ASC";
                prepstmnt = con.prepareStatement(sqlSearch);
                res = prepstmnt.executeQuery();

                while(res.next())
                {
                    String Name = res.getString("name");
                    String roll = res.getString("roll");
                    String reg = res.getString("reg");
                    String session = res.getString("session");
                    String semester = res.getString("semester");
                    String cgpa = res.getString("cgpa");

                    tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});

                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }

        }
    }//GEN-LAST:event_jTextFieldSearchKeyReleased

    private void jButton128ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton128ActionPerformed
        Object UpdateResult = jComboSem.getSelectedItem();
        
        if(UpdateResult=="1st Semester")
        {
        
        
        try
        {
             String sqlQry="UPDATE first_semester_result SET cgpa=? WHERE roll ='"+txtRoll.getText()+"'";
            
            prepstmnt = con.prepareStatement(sqlQry);

                        
                        prepstmnt.setString(1, txtCGPA.getText());
                        
                        
                       
                       prepstmnt.executeUpdate();
                       
                       
            
        }catch(SQLException e){
          JOptionPane.showMessageDialog(null, e);
        }
        
        
        
        
        TableRefresh();
            try{
                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();
                String sqlSrch = "SELECT * FROM  first_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                    String Name = res.getString("name");
                    String roll = res.getString("roll");
                    String reg = res.getString("reg");
                    String session = res.getString("session");
                    String semester = res.getString("semester");
                    String cgpa = res.getString("cgpa");

                    tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});


                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
        
        if(UpdateResult=="2nd Semester")
        {
        
        
        try
        {
             String sqlQry="UPDATE second_semester_result SET cgpa=? WHERE roll ='"+txtRoll.getText()+"'";
            
            prepstmnt = con.prepareStatement(sqlQry);

                        
                        prepstmnt.setString(1, txtCGPA.getText());
                        
                        
                       
                       prepstmnt.executeUpdate();
                       
                       
            
        }catch(SQLException e){
          JOptionPane.showMessageDialog(null, e);
        }
        
        
        
        
        TableRefresh();
            try{
                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();
                String sqlSrch = "SELECT * FROM  second_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                    String Name = res.getString("name");
                    String roll = res.getString("roll");
                    String reg = res.getString("reg");
                    String session = res.getString("session");
                    String semester = res.getString("semester");
                    String cgpa = res.getString("cgpa");

                    tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});


                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
        
        if(UpdateResult=="3rd Semester")
        {
        
        
        try
        {
             String sqlQry="UPDATE third_semester_result SET cgpa=? WHERE roll ='"+txtRoll.getText()+"'";
            
            prepstmnt = con.prepareStatement(sqlQry);

                        
                        prepstmnt.setString(1, txtCGPA.getText());
                        
                        
                       
                       prepstmnt.executeUpdate();
                       
                       
            
        }catch(SQLException e){
          JOptionPane.showMessageDialog(null, e);
        }
        
        
        
        
        TableRefresh();
            try{
                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();
                String sqlSrch = "SELECT * FROM  third_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                    String Name = res.getString("name");
                    String roll = res.getString("roll");
                    String reg = res.getString("reg");
                    String session = res.getString("session");
                    String semester = res.getString("semester");
                    String cgpa = res.getString("cgpa");

                    tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});


                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
        
        
        if(UpdateResult=="4th Semester")
        {
        
        
        try
        {
             String sqlQry="UPDATE fourth_semester_result SET cgpa=? WHERE roll ='"+txtRoll.getText()+"'";
            
            prepstmnt = con.prepareStatement(sqlQry);

                        
                        prepstmnt.setString(1, txtCGPA.getText());
                        
                        
                       
                       prepstmnt.executeUpdate();
                       
                       
            
        }catch(SQLException e){
          JOptionPane.showMessageDialog(null, e);
        }
        
        
        
        
        TableRefresh();
            try{
                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();
                String sqlSrch = "SELECT * FROM  fourth_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                    String Name = res.getString("name");
                    String roll = res.getString("roll");
                    String reg = res.getString("reg");
                    String session = res.getString("session");
                    String semester = res.getString("semester");
                    String cgpa = res.getString("cgpa");

                    tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});


                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
        
        
        if(UpdateResult=="5th Semester")
        {
        
        
        try
        {
             String sqlQry="UPDATE fifth_semester_result SET cgpa=? WHERE roll ='"+txtRoll.getText()+"'";
            
            prepstmnt = con.prepareStatement(sqlQry);

                        
                        prepstmnt.setString(1, txtCGPA.getText());
                        
                        
                       
                       prepstmnt.executeUpdate();
                       
                       
            
        }catch(SQLException e){
          JOptionPane.showMessageDialog(null, e);
        }
        
        
        
        
        TableRefresh();
            try{
                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();
                String sqlSrch = "SELECT * FROM  fifth_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                    String Name = res.getString("name");
                    String roll = res.getString("roll");
                    String reg = res.getString("reg");
                    String session = res.getString("session");
                    String semester = res.getString("semester");
                    String cgpa = res.getString("cgpa");

                    tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});


                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
        
        
        if(UpdateResult=="6th Semester")
        {
        
        
        try
        {
             String sqlQry="UPDATE sixth_semester_result SET cgpa=? WHERE roll ='"+txtRoll.getText()+"'";
            
            prepstmnt = con.prepareStatement(sqlQry);

                        
                        prepstmnt.setString(1, txtCGPA.getText());
                        
                        
                       
                       prepstmnt.executeUpdate();
                       
                       
            
        }catch(SQLException e){
          JOptionPane.showMessageDialog(null, e);
        }
        
        
        
        
        TableRefresh();
            try{
                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();
                String sqlSrch = "SELECT * FROM  sixth_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                    String Name = res.getString("name");
                    String roll = res.getString("roll");
                    String reg = res.getString("reg");
                    String session = res.getString("session");
                    String semester = res.getString("semester");
                    String cgpa = res.getString("cgpa");

                    tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});


                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
        
        
        
        if(UpdateResult=="7th Semester")
        {
        
        
        try
        {
             String sqlQry="UPDATE seventh_semster_result SET cgpa=? WHERE roll ='"+txtRoll.getText()+"'";
            
            prepstmnt = con.prepareStatement(sqlQry);

                        
                        prepstmnt.setString(1, txtCGPA.getText());
                        
                        
                       
                       prepstmnt.executeUpdate();
                       
                       
            
        }catch(SQLException e){
          JOptionPane.showMessageDialog(null, e);
        }
        
        
        
        
        TableRefresh();
            try{
                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();
                String sqlSrch = "SELECT * FROM  seventh_semster_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                    String Name = res.getString("name");
                    String roll = res.getString("roll");
                    String reg = res.getString("reg");
                    String session = res.getString("session");
                    String semester = res.getString("semester");
                    String cgpa = res.getString("cgpa");

                    tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});


                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
        
        
        if(UpdateResult=="8th Semester")
        {
        
        
        try
        {
             String sqlQry="UPDATE eighth_semester_result SET cgpa=? WHERE roll ='"+txtRoll.getText()+"'";
            
            prepstmnt = con.prepareStatement(sqlQry);

                        
                        prepstmnt.setString(1, txtCGPA.getText());
                        
                        
                       
                       prepstmnt.executeUpdate();
                       
                       
            
        }catch(SQLException e){
          JOptionPane.showMessageDialog(null, e);
        }
        
        
        
        
        TableRefresh();
            try{
                DefaultTableModel tb = (DefaultTableModel)jTableViewResult.getModel();
                String sqlSrch = "SELECT * FROM  eighth_semester_result";
            
                     prepstmnt = con.prepareStatement(sqlSrch);
                     res = prepstmnt.executeQuery();
            
                    while(res.next())
                    {
                    String Name = res.getString("name");
                    String roll = res.getString("roll");
                    String reg = res.getString("reg");
                    String session = res.getString("session");
                    String semester = res.getString("semester");
                    String cgpa = res.getString("cgpa");

                    tb.addRow(new Object[]{Name,roll,reg,session,semester,cgpa});


                    }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
        


    }//GEN-LAST:event_jButton128ActionPerformed

    private void jTableViewResultKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableViewResultKeyPressed
        // TODO add your handling code here:
        
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            
            Object View = jComboSem.getSelectedItem();
        if(View=="1st Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM first_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        
        if(View=="2nd Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM second_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        
        if(View=="3rd Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM third_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        if(View=="4th Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM fourth_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        if(View=="5th Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM fifth_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        if(View=="6th Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM sixth_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        if(View=="7th Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM seventh_semster_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }
        
        if(View=="8th Semester")
        {
         try{
           
            int row = jTableViewResult.getSelectedRow();
            String Table_Click = (jTableViewResult.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM eighth_semester_result WHERE roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
          
            while(res.next())
            {
                String Name = res.getString("name");
                String roll = res.getString("roll");
                String reg = res.getString("reg");
                String session = res.getString("session");
                String semester = res.getString("semester");
                String cgpa =res.getString("cgpa");
                
                
                txtName.setText(Name);
                txtRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
                txtCGPA.setText(cgpa);
                
               
            }
           
           
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
       }   
        }

        }
    }//GEN-LAST:event_jTableViewResultKeyPressed

    void print_resultinfo() throws SQLException, BadElementException, IOException {
       
        Document document = new Document(PageSize.A4.rotate());
       // Document document = new Document(PageSize.A4);
        Font ff1 = new Font(Font.BOLD, 13);
        ff1.setStyle(Font.UNDERLINE);
        ff1.setColor(Color.BLACK);
        ff1.setStyle(Font.BOLD);
        
        Font ff5 = new Font(Font.BOLD, 18);
        ff5.setStyle(Font.UNDERLINE);
        ff5.setColor(Color.BLACK);
        ff5.setStyle(Font.BOLD);
        Font ff3 = new Font(Font.NORMAL, 11);
        ff3.setStyle(Font.COURIER);
        ff3.setColor(Color.BLACK);
        Font ff4 = new Font(Font.BOLD, 10);
        ff4.setStyle(Font.NORMAL);
        ff4.setColor(Color.BLACK);

        

        Paragraph paragraph3 = new Paragraph("\n");         
        paragraph3.setAlignment(Element.ALIGN_CENTER);
       

        try {

            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("singleresult.pdf"));

            document.open();

            PdfContentByte cb = writer.getDirectContent();

            PdfPTable table = new PdfPTable(2);

            PdfPCell cell5 = new PdfPCell();
            
           String name="",roll="",regno="",session="",semester="",cgpa="";
          
           
           
           
           
           name=txtName.getText();
           roll=txtRoll.getText();
           regno=txtReg.getText();
           session=(String) jComboSession.getSelectedItem();
           semester = jComboSemester.getSelectedItem().toString();
           cgpa=txtCGPA.getText();
       
           
           
           
           
            Paragraph Title = new Paragraph("Chittagong Polytechnic Institute", new Font(Font.BOLD, 40, Font.BOLD,Color.DARK_GRAY));
            Title.setAlignment(Element.ALIGN_CENTER);
            document.add(Title);
            Paragraph Subtitle = new Paragraph("Nasirabad, Chittagong - 4209", new Font(Font.BOLD, 20, Font.BOLD,Color.DARK_GRAY));
            Subtitle.setAlignment(Element.ALIGN_CENTER);
            document.add(Subtitle);

            Paragraph mainparagraph = new Paragraph("Result", new Font(Font.BOLD, 30, Font.BOLD,Color.DARK_GRAY));
            mainparagraph.setAlignment(Element.ALIGN_CENTER);
            
            
            
            PdfPTable my_report_table1 = new PdfPTable(2);
            //left side
            PdfPCell table_cell1 = new PdfPCell();
            my_report_table1.setWidthPercentage(100);

            table_cell1 = new PdfPCell(new Phrase(" ", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table1.addCell(table_cell1);

            //right side
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh:mm:ss a");
            java.util.Date printDate = new java.util.Date();
            dateFormat.format(printDate);
           
            table_cell1 = new PdfPCell(new Phrase("Print Date & Time :  " + dateFormat.format(printDate), new Font(Font.NORMAL, 11, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //table_cell6.setBorder(Rectangle.NO_BORDER);
            
            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            my_report_table1.addCell(table_cell1);
            
            
            
             PdfPTable my_report_table2 = new PdfPTable(1);
            //left side
            PdfPCell table_cell2 = new PdfPCell();
            my_report_table2.setWidthPercentage(100);

            table_cell2 = new PdfPCell(new Phrase("Student Name : " + name, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            
            PdfPTable my_report_table3 = new PdfPTable(1);
            //left side
            PdfPCell table_cell3 = new PdfPCell();
            my_report_table3.setWidthPercentage(100);

            table_cell3 = new PdfPCell(new Phrase("Student Roll : " + roll, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell3.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell3.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table3.addCell(table_cell3);
            
            
            
            PdfPTable my_report_table4 = new PdfPTable(1);
            //left side
            PdfPCell table_cell4 = new PdfPCell();
            my_report_table4.setWidthPercentage(100);

            table_cell4 = new PdfPCell(new Phrase("Registration No : " + regno, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell4.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell4.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table4.addCell(table_cell4);
            
            
            
            PdfPTable my_report_table11 = new PdfPTable(1);
            //left side
            PdfPCell table_cell11 = new PdfPCell();
            my_report_table11.setWidthPercentage(100);

            table_cell11 = new PdfPCell(new Phrase("Session : " + session, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell11.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell11.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table11.addCell(table_cell11);
            
            
            
            PdfPTable my_report_table300 = new PdfPTable(1);
            //left side
            PdfPCell table_cell300 = new PdfPCell();
            my_report_table300.setWidthPercentage(100);

            table_cell300 = new PdfPCell(new Phrase("Semester : " + semester, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell300.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell300.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table300.addCell(table_cell300);
            
            
            
             PdfPTable my_report_table9 = new PdfPTable(1);
            //left side
            PdfPCell table_cell9 = new PdfPCell();
            my_report_table9.setWidthPercentage(100);

            table_cell9 = new PdfPCell(new Phrase("CGPA : " + cgpa, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell9.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell9.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table9.addCell(table_cell9);
            
            
            
            

            
            
            
            
            document.add(mainparagraph);
            document.add(paragraph3);
            document.add(my_report_table1);
            document.add(paragraph3);
            document.add(paragraph3);
            document.add(my_report_table2);
            document.add(my_report_table3);
            document.add(my_report_table4);
            document.add(my_report_table11);
            document.add(my_report_table300);
            document.add(my_report_table9);
            
           
        }catch (DocumentException | HeadlessException e56) {
            System.err.println(e56.getMessage());
        }
        
        document.close();
    }



    
    private void jButton129ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton129ActionPerformed
        
        
        try {
            print_resultinfo();
        } catch (SQLException | BadElementException | IOException ex) {
            Logger.getLogger(Panel_ViewResult.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if (Desktop.isDesktopSupported()) {
            try {
                File myfile = new File("singleresult.pdf");

                Desktop.getDesktop().open(myfile);
            } catch (IOException e17) {
                // JOptionPane.showMessageDialog(null, e17.toString());
            }
        }
    }//GEN-LAST:event_jButton129ActionPerformed

    private void jComboSemReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboSemReportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboSemReportActionPerformed

    
    
     void print_First_Semester_Result() throws SQLException, BadElementException, IOException {
         Document document = new Document(PageSize.A4.rotate());
       // Document document = new Document(PageSize.A4);
        Font ff1 = new Font(Font.BOLD, 13);
        ff1.setStyle(Font.UNDERLINE);
        ff1.setColor(Color.BLACK);
        ff1.setStyle(Font.BOLD);
        
        Font ff5 = new Font(Font.BOLD, 18);
        ff5.setStyle(Font.UNDERLINE);
        ff5.setColor(Color.BLACK);
        ff5.setStyle(Font.BOLD);
        Font ff3 = new Font(Font.NORMAL, 11);
        ff3.setStyle(Font.COURIER);
        ff3.setColor(Color.BLACK);
        Font ff4 = new Font(Font.BOLD, 10);
        ff4.setStyle(Font.NORMAL);
        ff4.setColor(Color.BLACK);
        Paragraph paragraph3 = new Paragraph("\n");         
        paragraph3.setAlignment(Element.ALIGN_CENTER);
       

        try {

            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("Result.pdf"));

            document.open();

            PdfContentByte cb = writer.getDirectContent();

            PdfPTable table = new PdfPTable(2);

            PdfPCell cell5 = new PdfPCell();

            String Name="",Roll="",Reg="",Session="",Semester="",CGPA="";

          
            
            ///////Name
          
             try{
            
            
            String Result = "1st Semester";
            String sqlSrch = "SELECT * FROM  first_semester_result WHERE semester='"+Result+"' AND session='"+jComboSessionReport.getSelectedItem()+"'";
            
            prepstmnt = con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            
            while(res.next())
                {
                Name = res.getString("name");
                Roll = res.getString("roll");
                Reg = res.getString("reg");
                Session = res.getString("session");
                Semester= res.getString("semester");
                CGPA=res.getString("cgpa");
                    
               
             
              
            }
            
            
            
        }catch(Exception e)
        {
            System.out.println("Error ==> "+e);
        }
             Paragraph Title = new Paragraph("Chittagong Polytechnic Institute", new Font(Font.BOLD, 40, Font.BOLD,Color.DARK_GRAY));
            Title.setAlignment(Element.ALIGN_CENTER);
            document.add(Title);
            Paragraph Subtitle = new Paragraph("Nasirabad, Chittagong - 4209", new Font(Font.BOLD, 20, Font.BOLD,Color.DARK_GRAY));
            Subtitle.setAlignment(Element.ALIGN_CENTER);
            document.add(Subtitle);

            Paragraph mainparagraph = new Paragraph("1st Semester Result", new Font(Font.BOLD, 30, Font.BOLD,Color.DARK_GRAY));
            mainparagraph.setAlignment(Element.ALIGN_CENTER);
            
            

     
            
            PdfPTable my_report_table1 = new PdfPTable(2);
            
            //left side
            PdfPCell table_cell1 = new PdfPCell();
            my_report_table1.setWidthPercentage(100);

            table_cell1 = new PdfPCell(new Phrase(" ", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table1.addCell(table_cell1);

            //right side
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh:mm:ss a");
            java.util.Date printDate = new java.util.Date();
            dateFormat.format(printDate);
           
            table_cell1 = new PdfPCell(new Phrase("Print Date & Time :  " + dateFormat.format(printDate), new Font(Font.NORMAL, 11, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //table_cell6.setBorder(Rectangle.NO_BORDER);
            
            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            my_report_table1.addCell(table_cell1);
                                 

            //TABLE HEADER
            PdfPTable my_report_table = new PdfPTable(6);
            float[] columnWidths = {0.5f,0.8f,0.8f,0.8f,0.8f,0.8f};
            my_report_table.setWidths(columnWidths);
            my_report_table.setWidthPercentage(100);
            String[] headers1 = new String[]{
                "Name","Roll","Reg", "Session", "Semester","CGPA"
            };

            PdfPTable table1 = new PdfPTable(headers1.length);
            table1.setWidths(columnWidths);
            table1.setWidthPercentage(100);
            for (String header : headers1) {
                PdfPCell cell = new PdfPCell();

                cell.setGrayFill(0.9f);
                cell.setPhrase(new Phrase(header, new Font(Font.NORMAL, 15, Font.BOLD)));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table1.addCell(cell);
            }
            table1.completeRow();
            
            ////END OF HEADER
            
            ///////////////
            
            PdfPTable my_report_table2 = new PdfPTable(6);
            
            //left side
            PdfPCell table_cell2 = new PdfPCell();
            my_report_table2.setWidthPercentage(100);         
            my_report_table2.setWidths(columnWidths);

            
            ///////////////////
            
              try {

            
            //String sqlQry="Select * from emp_info ORDER BY Emp_ID ASC";
           String Result = "1st Semester";
            String sqlSrch = "SELECT * FROM  first_semester_result WHERE semester='"+Result+"' AND session='"+jComboSessionReport.getSelectedItem()+"'";

            prepstmnt = con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            
            while(res.next())
            {
                
            Name=res.getString("name");  
            table_cell2 = new PdfPCell(new Phrase(Name, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Roll = res.getString("roll");
             table_cell2 = new PdfPCell(new Phrase(Roll, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Reg = res.getString("reg");
             table_cell2 = new PdfPCell(new Phrase(Reg, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Session = res.getString("session");
            table_cell2 = new PdfPCell(new Phrase(Session, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            Semester = res.getString("semester");
            table_cell2 = new PdfPCell(new Phrase(Semester, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            CGPA = res.getString("cgpa");
            table_cell2 = new PdfPCell(new Phrase(CGPA, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
             
                
               
                
            }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
           

           ///////////////

            document.add(mainparagraph);
            document.add(paragraph3);
            document.add(my_report_table1);
           
            document.add(paragraph3);
            document.add(table1);
            document.add(my_report_table2);
            
            
           

            // document.add(table);
        } catch (DocumentException | HeadlessException e56) {
            System.err.println(e56.getMessage());
        }

        document.close(); 
     }
     
     
     
     void print_Second_Semester_Result() throws SQLException, BadElementException, IOException {
         Document document = new Document(PageSize.A4.rotate());
       // Document document = new Document(PageSize.A4);
        Font ff1 = new Font(Font.BOLD, 13);
        ff1.setStyle(Font.UNDERLINE);
        ff1.setColor(Color.BLACK);
        ff1.setStyle(Font.BOLD);
        
        Font ff5 = new Font(Font.BOLD, 18);
        ff5.setStyle(Font.UNDERLINE);
        ff5.setColor(Color.BLACK);
        ff5.setStyle(Font.BOLD);
        Font ff3 = new Font(Font.NORMAL, 11);
        ff3.setStyle(Font.COURIER);
        ff3.setColor(Color.BLACK);
        Font ff4 = new Font(Font.BOLD, 10);
        ff4.setStyle(Font.NORMAL);
        ff4.setColor(Color.BLACK);
        Paragraph paragraph3 = new Paragraph("\n");         
        paragraph3.setAlignment(Element.ALIGN_CENTER);
       

        try {

            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("Result.pdf"));

            document.open();

            PdfContentByte cb = writer.getDirectContent();

            PdfPTable table = new PdfPTable(2);

            PdfPCell cell5 = new PdfPCell();

            String Name="",Roll="",Reg="",Session="",Semester="",CGPA="";

          
            
            ///////Name
          
             try{
            
            
            String Result = "2nd Semester";
            String sqlSrch = "SELECT * FROM  second_semester_result WHERE semester='"+Result+"' AND session='"+jComboSessionReport.getSelectedItem()+"'";
            
            prepstmnt = con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            
            while(res.next())
                {
                Name = res.getString("name");
                Roll = res.getString("roll");
                Reg = res.getString("reg");
                Session = res.getString("session");
                Semester= res.getString("semester");
                CGPA=res.getString("cgpa");
                    
               
             
              
            }
            
            
            
        }catch(Exception e)
        {
            System.out.println("Error ==> "+e);
        }
             Paragraph Title = new Paragraph("Chittagong Polytechnic Institute", new Font(Font.BOLD, 40, Font.BOLD,Color.DARK_GRAY));
            Title.setAlignment(Element.ALIGN_CENTER);
            document.add(Title);
            Paragraph Subtitle = new Paragraph("Nasirabad, Chittagong - 4209", new Font(Font.BOLD, 20, Font.BOLD,Color.DARK_GRAY));
            Subtitle.setAlignment(Element.ALIGN_CENTER);
            document.add(Subtitle);

            Paragraph mainparagraph = new Paragraph("2nd Semester Result", new Font(Font.BOLD, 30, Font.BOLD,Color.DARK_GRAY));
            mainparagraph.setAlignment(Element.ALIGN_CENTER);
            
            

     
            
            PdfPTable my_report_table1 = new PdfPTable(2);
            
            //left side
            PdfPCell table_cell1 = new PdfPCell();
            my_report_table1.setWidthPercentage(100);

            table_cell1 = new PdfPCell(new Phrase(" ", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table1.addCell(table_cell1);

            //right side
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh:mm:ss a");
            java.util.Date printDate = new java.util.Date();
            dateFormat.format(printDate);
           
            table_cell1 = new PdfPCell(new Phrase("Print Date & Time :  " + dateFormat.format(printDate), new Font(Font.NORMAL, 11, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //table_cell6.setBorder(Rectangle.NO_BORDER);
            
            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            my_report_table1.addCell(table_cell1);
                                 

            //TABLE HEADER
            PdfPTable my_report_table = new PdfPTable(6);
            float[] columnWidths = {0.5f,0.8f,0.8f,0.8f,0.8f,0.8f};
            my_report_table.setWidths(columnWidths);
            my_report_table.setWidthPercentage(100);
            String[] headers1 = new String[]{
                "Name","Roll","Reg", "Session", "Semester","CGPA"
            };

            PdfPTable table1 = new PdfPTable(headers1.length);
            table1.setWidths(columnWidths);
            table1.setWidthPercentage(100);
            for (String header : headers1) {
                PdfPCell cell = new PdfPCell();

                cell.setGrayFill(0.9f);
                cell.setPhrase(new Phrase(header, new Font(Font.NORMAL, 15, Font.BOLD)));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table1.addCell(cell);
            }
            table1.completeRow();
            
            ////END OF HEADER
            
            ///////////////
            
            PdfPTable my_report_table2 = new PdfPTable(6);
            
            //left side
            PdfPCell table_cell2 = new PdfPCell();
            my_report_table2.setWidthPercentage(100);         
            my_report_table2.setWidths(columnWidths);

            
            ///////////////////
            
              try {

            
            //String sqlQry="Select * from emp_info ORDER BY Emp_ID ASC";
           String Result = "2nd Semester";
            String sqlSrch = "SELECT * FROM  second_semester_result WHERE semester='"+Result+"' AND session='"+jComboSessionReport.getSelectedItem()+"'";

            prepstmnt = con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            
            while(res.next())
            {
                
            Name=res.getString("name");  
            table_cell2 = new PdfPCell(new Phrase(Name, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Roll = res.getString("roll");
             table_cell2 = new PdfPCell(new Phrase(Roll, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Reg = res.getString("reg");
             table_cell2 = new PdfPCell(new Phrase(Reg, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Session = res.getString("session");
            table_cell2 = new PdfPCell(new Phrase(Session, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            Semester = res.getString("semester");
            table_cell2 = new PdfPCell(new Phrase(Semester, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            CGPA = res.getString("cgpa");
            table_cell2 = new PdfPCell(new Phrase(CGPA, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
             
                
               
                
            }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
           

           ///////////////

            document.add(mainparagraph);
            document.add(paragraph3);
            document.add(my_report_table1);
           
            document.add(paragraph3);
            document.add(table1);
            document.add(my_report_table2);
            
            
           

            // document.add(table);
        } catch (DocumentException | HeadlessException e56) {
            System.err.println(e56.getMessage());
        }

        document.close(); 
     }
     
     
     void print_Third_Semester_Result() throws SQLException, BadElementException, IOException {
         Document document = new Document(PageSize.A4.rotate());
       // Document document = new Document(PageSize.A4);
        Font ff1 = new Font(Font.BOLD, 13);
        ff1.setStyle(Font.UNDERLINE);
        ff1.setColor(Color.BLACK);
        ff1.setStyle(Font.BOLD);
        
        Font ff5 = new Font(Font.BOLD, 18);
        ff5.setStyle(Font.UNDERLINE);
        ff5.setColor(Color.BLACK);
        ff5.setStyle(Font.BOLD);
        Font ff3 = new Font(Font.NORMAL, 11);
        ff3.setStyle(Font.COURIER);
        ff3.setColor(Color.BLACK);
        Font ff4 = new Font(Font.BOLD, 10);
        ff4.setStyle(Font.NORMAL);
        ff4.setColor(Color.BLACK);
        Paragraph paragraph3 = new Paragraph("\n");         
        paragraph3.setAlignment(Element.ALIGN_CENTER);
       

        try {

            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("Result.pdf"));

            document.open();

            PdfContentByte cb = writer.getDirectContent();

            PdfPTable table = new PdfPTable(2);

            PdfPCell cell5 = new PdfPCell();

            String Name="",Roll="",Reg="",Session="",Semester="",CGPA="";

          
            
            ///////Name
          
             try{
            
            
            String Result = "3rd Semester";
            String sqlSrch = "SELECT * FROM  third_semester_result WHERE semester='"+Result+"' AND session='"+jComboSessionReport.getSelectedItem()+"'";
            
            prepstmnt = con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            
            while(res.next())
                {
                Name = res.getString("name");
                Roll = res.getString("roll");
                Reg = res.getString("reg");
                Session = res.getString("session");
                Semester= res.getString("semester");
                CGPA=res.getString("cgpa");
                    
               
             
              
            }
            
            
            
        }catch(Exception e)
        {
            System.out.println("Error ==> "+e);
        }
             Paragraph Title = new Paragraph("Chittagong Polytechnic Institute", new Font(Font.BOLD, 40, Font.BOLD,Color.DARK_GRAY));
            Title.setAlignment(Element.ALIGN_CENTER);
            document.add(Title);
            Paragraph Subtitle = new Paragraph("Nasirabad, Chittagong - 4209", new Font(Font.BOLD, 20, Font.BOLD,Color.DARK_GRAY));
            Subtitle.setAlignment(Element.ALIGN_CENTER);
            document.add(Subtitle);

            Paragraph mainparagraph = new Paragraph("3rd Semester Result", new Font(Font.BOLD, 30, Font.BOLD,Color.DARK_GRAY));
            mainparagraph.setAlignment(Element.ALIGN_CENTER);
            
            

     
            
            PdfPTable my_report_table1 = new PdfPTable(2);
            
            //left side
            PdfPCell table_cell1 = new PdfPCell();
            my_report_table1.setWidthPercentage(100);

            table_cell1 = new PdfPCell(new Phrase(" ", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table1.addCell(table_cell1);

            //right side
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh:mm:ss a");
            java.util.Date printDate = new java.util.Date();
            dateFormat.format(printDate);
           
            table_cell1 = new PdfPCell(new Phrase("Print Date & Time :  " + dateFormat.format(printDate), new Font(Font.NORMAL, 11, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //table_cell6.setBorder(Rectangle.NO_BORDER);
            
            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            my_report_table1.addCell(table_cell1);
                                 

            //TABLE HEADER
            PdfPTable my_report_table = new PdfPTable(6);
            float[] columnWidths = {0.5f,0.8f,0.8f,0.8f,0.8f,0.8f};
            my_report_table.setWidths(columnWidths);
            my_report_table.setWidthPercentage(100);
            String[] headers1 = new String[]{
                "Name","Roll","Reg", "Session", "Semester","CGPA"
            };

            PdfPTable table1 = new PdfPTable(headers1.length);
            table1.setWidths(columnWidths);
            table1.setWidthPercentage(100);
            for (String header : headers1) {
                PdfPCell cell = new PdfPCell();

                cell.setGrayFill(0.9f);
                cell.setPhrase(new Phrase(header, new Font(Font.NORMAL, 15, Font.BOLD)));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table1.addCell(cell);
            }
            table1.completeRow();
            
            ////END OF HEADER
            
            ///////////////
            
            PdfPTable my_report_table2 = new PdfPTable(6);
            
            //left side
            PdfPCell table_cell2 = new PdfPCell();
            my_report_table2.setWidthPercentage(100);         
            my_report_table2.setWidths(columnWidths);

            
            ///////////////////
            
              try {

            
            //String sqlQry="Select * from emp_info ORDER BY Emp_ID ASC";
           String Result = "3rd Semester";
            String sqlSrch = "SELECT * FROM  third_semester_result WHERE semester='"+Result+"' AND session='"+jComboSessionReport.getSelectedItem()+"'";

            prepstmnt = con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            
            while(res.next())
            {
                
            Name=res.getString("name");  
            table_cell2 = new PdfPCell(new Phrase(Name, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Roll = res.getString("roll");
             table_cell2 = new PdfPCell(new Phrase(Roll, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Reg = res.getString("reg");
             table_cell2 = new PdfPCell(new Phrase(Reg, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Session = res.getString("session");
            table_cell2 = new PdfPCell(new Phrase(Session, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            Semester = res.getString("semester");
            table_cell2 = new PdfPCell(new Phrase(Semester, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            CGPA = res.getString("cgpa");
            table_cell2 = new PdfPCell(new Phrase(CGPA, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
             
                
               
                
            }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
           

           ///////////////

            document.add(mainparagraph);
            document.add(paragraph3);
            document.add(my_report_table1);
           
            document.add(paragraph3);
            document.add(table1);
            document.add(my_report_table2);
            
            
           

            // document.add(table);
        } catch (DocumentException | HeadlessException e56) {
            System.err.println(e56.getMessage());
        }

        document.close(); 
     }
     
     
     void print_Fourth_Semester_Result() throws SQLException, BadElementException, IOException {
         Document document = new Document(PageSize.A4.rotate());
       // Document document = new Document(PageSize.A4);
        Font ff1 = new Font(Font.BOLD, 13);
        ff1.setStyle(Font.UNDERLINE);
        ff1.setColor(Color.BLACK);
        ff1.setStyle(Font.BOLD);
        
        Font ff5 = new Font(Font.BOLD, 18);
        ff5.setStyle(Font.UNDERLINE);
        ff5.setColor(Color.BLACK);
        ff5.setStyle(Font.BOLD);
        Font ff3 = new Font(Font.NORMAL, 11);
        ff3.setStyle(Font.COURIER);
        ff3.setColor(Color.BLACK);
        Font ff4 = new Font(Font.BOLD, 10);
        ff4.setStyle(Font.NORMAL);
        ff4.setColor(Color.BLACK);
        Paragraph paragraph3 = new Paragraph("\n");         
        paragraph3.setAlignment(Element.ALIGN_CENTER);
       

        try {

            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("Result.pdf"));

            document.open();

            PdfContentByte cb = writer.getDirectContent();

            PdfPTable table = new PdfPTable(2);

            PdfPCell cell5 = new PdfPCell();

            String Name="",Roll="",Reg="",Session="",Semester="",CGPA="";

          
            
            ///////Name
          
             try{
            
            
            String Result = "4th Semester";
            String sqlSrch = "SELECT * FROM  fourth_semester_result WHERE semester='"+Result+"' AND session='"+jComboSessionReport.getSelectedItem()+"'";
            
            prepstmnt = con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            
            while(res.next())
                {
                Name = res.getString("name");
                Roll = res.getString("roll");
                Reg = res.getString("reg");
                Session = res.getString("session");
                Semester= res.getString("semester");
                CGPA=res.getString("cgpa");
                    
               
             
              
            }
            
            
            
        }catch(Exception e)
        {
            System.out.println("Error ==> "+e);
        }
             Paragraph Title = new Paragraph("Chittagong Polytechnic Institute", new Font(Font.BOLD, 40, Font.BOLD,Color.DARK_GRAY));
            Title.setAlignment(Element.ALIGN_CENTER);
            document.add(Title);
            Paragraph Subtitle = new Paragraph("Nasirabad, Chittagong - 4209", new Font(Font.BOLD, 20, Font.BOLD,Color.DARK_GRAY));
            Subtitle.setAlignment(Element.ALIGN_CENTER);
            document.add(Subtitle);

            Paragraph mainparagraph = new Paragraph("4th Semester Result", new Font(Font.BOLD, 30, Font.BOLD,Color.DARK_GRAY));
            mainparagraph.setAlignment(Element.ALIGN_CENTER);
            
            

     
            
            PdfPTable my_report_table1 = new PdfPTable(2);
            
            //left side
            PdfPCell table_cell1 = new PdfPCell();
            my_report_table1.setWidthPercentage(100);

            table_cell1 = new PdfPCell(new Phrase(" ", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table1.addCell(table_cell1);

            //right side
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh:mm:ss a");
            java.util.Date printDate = new java.util.Date();
            dateFormat.format(printDate);
           
            table_cell1 = new PdfPCell(new Phrase("Print Date & Time :  " + dateFormat.format(printDate), new Font(Font.NORMAL, 11, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //table_cell6.setBorder(Rectangle.NO_BORDER);
            
            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            my_report_table1.addCell(table_cell1);
                                 

            //TABLE HEADER
            PdfPTable my_report_table = new PdfPTable(6);
            float[] columnWidths = {0.5f,0.8f,0.8f,0.8f,0.8f,0.8f};
            my_report_table.setWidths(columnWidths);
            my_report_table.setWidthPercentage(100);
            String[] headers1 = new String[]{
                "Name","Roll","Reg", "Session", "Semester","CGPA"
            };

            PdfPTable table1 = new PdfPTable(headers1.length);
            table1.setWidths(columnWidths);
            table1.setWidthPercentage(100);
            for (String header : headers1) {
                PdfPCell cell = new PdfPCell();

                cell.setGrayFill(0.9f);
                cell.setPhrase(new Phrase(header, new Font(Font.NORMAL, 15, Font.BOLD)));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table1.addCell(cell);
            }
            table1.completeRow();
            
            ////END OF HEADER
            
            ///////////////
            
            PdfPTable my_report_table2 = new PdfPTable(6);
            
            //left side
            PdfPCell table_cell2 = new PdfPCell();
            my_report_table2.setWidthPercentage(100);         
            my_report_table2.setWidths(columnWidths);

            
            ///////////////////
            
              try {

            
            //String sqlQry="Select * from emp_info ORDER BY Emp_ID ASC";
           String Result = "4th Semester";
            String sqlSrch = "SELECT * FROM  fourth_semester_result WHERE semester='"+Result+"' AND session='"+jComboSessionReport.getSelectedItem()+"'";

            prepstmnt = con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            
            while(res.next())
            {
                
            Name=res.getString("name");  
            table_cell2 = new PdfPCell(new Phrase(Name, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Roll = res.getString("roll");
             table_cell2 = new PdfPCell(new Phrase(Roll, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Reg = res.getString("reg");
             table_cell2 = new PdfPCell(new Phrase(Reg, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Session = res.getString("session");
            table_cell2 = new PdfPCell(new Phrase(Session, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            Semester = res.getString("semester");
            table_cell2 = new PdfPCell(new Phrase(Semester, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            CGPA = res.getString("cgpa");
            table_cell2 = new PdfPCell(new Phrase(CGPA, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
             
                
               
                
            }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
           

           ///////////////

            document.add(mainparagraph);
            document.add(paragraph3);
            document.add(my_report_table1);
           
            document.add(paragraph3);
            document.add(table1);
            document.add(my_report_table2);
            
            
           

            // document.add(table);
        } catch (DocumentException | HeadlessException e56) {
            System.err.println(e56.getMessage());
        }

        document.close(); 
     }
     
     
     void print_Fifth_Semester_Result() throws SQLException, BadElementException, IOException {
         Document document = new Document(PageSize.A4.rotate());
       // Document document = new Document(PageSize.A4);
        Font ff1 = new Font(Font.BOLD, 13);
        ff1.setStyle(Font.UNDERLINE);
        ff1.setColor(Color.BLACK);
        ff1.setStyle(Font.BOLD);
        
        Font ff5 = new Font(Font.BOLD, 18);
        ff5.setStyle(Font.UNDERLINE);
        ff5.setColor(Color.BLACK);
        ff5.setStyle(Font.BOLD);
        Font ff3 = new Font(Font.NORMAL, 11);
        ff3.setStyle(Font.COURIER);
        ff3.setColor(Color.BLACK);
        Font ff4 = new Font(Font.BOLD, 10);
        ff4.setStyle(Font.NORMAL);
        ff4.setColor(Color.BLACK);
        Paragraph paragraph3 = new Paragraph("\n");         
        paragraph3.setAlignment(Element.ALIGN_CENTER);
       

        try {

            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("Result.pdf"));

            document.open();

            PdfContentByte cb = writer.getDirectContent();

            PdfPTable table = new PdfPTable(2);

            PdfPCell cell5 = new PdfPCell();

            String Name="",Roll="",Reg="",Session="",Semester="",CGPA="";

          
            
            ///////Name
          
             try{
            
            
            String Result = "5th Semester";
            String sqlSrch = "SELECT * FROM  fifth_semester_result WHERE semester='"+Result+"' AND session='"+jComboSessionReport.getSelectedItem()+"'";
            
            prepstmnt = con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            
            while(res.next())
                {
                Name = res.getString("name");
                Roll = res.getString("roll");
                Reg = res.getString("reg");
                Session = res.getString("session");
                Semester= res.getString("semester");
                CGPA=res.getString("cgpa");
                    
               
             
              
            }
            
            
            
        }catch(Exception e)
        {
            System.out.println("Error ==> "+e);
        }
             Paragraph Title = new Paragraph("Chittagong Polytechnic Institute", new Font(Font.BOLD, 40, Font.BOLD,Color.DARK_GRAY));
            Title.setAlignment(Element.ALIGN_CENTER);
            document.add(Title);
            Paragraph Subtitle = new Paragraph("Nasirabad, Chittagong - 4209", new Font(Font.BOLD, 20, Font.BOLD,Color.DARK_GRAY));
            Subtitle.setAlignment(Element.ALIGN_CENTER);
            document.add(Subtitle);

            Paragraph mainparagraph = new Paragraph("5th Semester Result", new Font(Font.BOLD, 30, Font.BOLD,Color.DARK_GRAY));
            mainparagraph.setAlignment(Element.ALIGN_CENTER);
            
            

     
            
            PdfPTable my_report_table1 = new PdfPTable(2);
            
            //left side
            PdfPCell table_cell1 = new PdfPCell();
            my_report_table1.setWidthPercentage(100);

            table_cell1 = new PdfPCell(new Phrase(" ", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table1.addCell(table_cell1);

            //right side
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh:mm:ss a");
            java.util.Date printDate = new java.util.Date();
            dateFormat.format(printDate);
           
            table_cell1 = new PdfPCell(new Phrase("Print Date & Time :  " + dateFormat.format(printDate), new Font(Font.NORMAL, 11, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //table_cell6.setBorder(Rectangle.NO_BORDER);
            
            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            my_report_table1.addCell(table_cell1);
                                 

            //TABLE HEADER
            PdfPTable my_report_table = new PdfPTable(6);
            float[] columnWidths = {0.5f,0.8f,0.8f,0.8f,0.8f,0.8f};
            my_report_table.setWidths(columnWidths);
            my_report_table.setWidthPercentage(100);
            String[] headers1 = new String[]{
                "Name","Roll","Reg", "Session", "Semester","CGPA"
            };

            PdfPTable table1 = new PdfPTable(headers1.length);
            table1.setWidths(columnWidths);
            table1.setWidthPercentage(100);
            for (String header : headers1) {
                PdfPCell cell = new PdfPCell();

                cell.setGrayFill(0.9f);
                cell.setPhrase(new Phrase(header, new Font(Font.NORMAL, 15, Font.BOLD)));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table1.addCell(cell);
            }
            table1.completeRow();
            
            ////END OF HEADER
            
            ///////////////
            
            PdfPTable my_report_table2 = new PdfPTable(6);
            
            //left side
            PdfPCell table_cell2 = new PdfPCell();
            my_report_table2.setWidthPercentage(100);         
            my_report_table2.setWidths(columnWidths);

            
            ///////////////////
            
              try {

            
            //String sqlQry="Select * from emp_info ORDER BY Emp_ID ASC";
           String Result = "5th Semester";
            String sqlSrch = "SELECT * FROM  fifth_semester_result WHERE semester='"+Result+"' AND session='"+jComboSessionReport.getSelectedItem()+"'";

            prepstmnt = con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            
            while(res.next())
            {
                
            Name=res.getString("name");  
            table_cell2 = new PdfPCell(new Phrase(Name, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Roll = res.getString("roll");
             table_cell2 = new PdfPCell(new Phrase(Roll, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Reg = res.getString("reg");
             table_cell2 = new PdfPCell(new Phrase(Reg, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Session = res.getString("session");
            table_cell2 = new PdfPCell(new Phrase(Session, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            Semester = res.getString("semester");
            table_cell2 = new PdfPCell(new Phrase(Semester, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            CGPA = res.getString("cgpa");
            table_cell2 = new PdfPCell(new Phrase(CGPA, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
             
                
               
                
            }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
           

           ///////////////

            document.add(mainparagraph);
            document.add(paragraph3);
            document.add(my_report_table1);
           
            document.add(paragraph3);
            document.add(table1);
            document.add(my_report_table2);
            
            
           

            // document.add(table);
        } catch (DocumentException | HeadlessException e56) {
            System.err.println(e56.getMessage());
        }

        document.close(); 
     }
     
     
     void print_Sixth_Semester_Result() throws SQLException, BadElementException, IOException {
         Document document = new Document(PageSize.A4.rotate());
       // Document document = new Document(PageSize.A4);
        Font ff1 = new Font(Font.BOLD, 13);
        ff1.setStyle(Font.UNDERLINE);
        ff1.setColor(Color.BLACK);
        ff1.setStyle(Font.BOLD);
        
        Font ff5 = new Font(Font.BOLD, 18);
        ff5.setStyle(Font.UNDERLINE);
        ff5.setColor(Color.BLACK);
        ff5.setStyle(Font.BOLD);
        Font ff3 = new Font(Font.NORMAL, 11);
        ff3.setStyle(Font.COURIER);
        ff3.setColor(Color.BLACK);
        Font ff4 = new Font(Font.BOLD, 10);
        ff4.setStyle(Font.NORMAL);
        ff4.setColor(Color.BLACK);
        Paragraph paragraph3 = new Paragraph("\n");         
        paragraph3.setAlignment(Element.ALIGN_CENTER);
       

        try {

            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("Result.pdf"));

            document.open();

            PdfContentByte cb = writer.getDirectContent();

            PdfPTable table = new PdfPTable(2);

            PdfPCell cell5 = new PdfPCell();

            String Name="",Roll="",Reg="",Session="",Semester="",CGPA="";

          
            
            ///////Name
          
             try{
            
            
            String Result = "6th Semester";
            String sqlSrch = "SELECT * FROM  sixth_semester_result WHERE semester='"+Result+"' AND session='"+jComboSessionReport.getSelectedItem()+"'";
            
            prepstmnt = con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            
            while(res.next())
                {
                Name = res.getString("name");
                Roll = res.getString("roll");
                Reg = res.getString("reg");
                Session = res.getString("session");
                Semester= res.getString("semester");
                CGPA=res.getString("cgpa");
                    
               
             
              
            }
            
            
            
        }catch(Exception e)
        {
            System.out.println("Error ==> "+e);
        }
             Paragraph Title = new Paragraph("Chittagong Polytechnic Institute", new Font(Font.BOLD, 40, Font.BOLD,Color.DARK_GRAY));
            Title.setAlignment(Element.ALIGN_CENTER);
            document.add(Title);
            Paragraph Subtitle = new Paragraph("Nasirabad, Chittagong - 4209", new Font(Font.BOLD, 20, Font.BOLD,Color.DARK_GRAY));
            Subtitle.setAlignment(Element.ALIGN_CENTER);
            document.add(Subtitle);

            Paragraph mainparagraph = new Paragraph("6th Semester Result", new Font(Font.BOLD, 30, Font.BOLD,Color.DARK_GRAY));
            mainparagraph.setAlignment(Element.ALIGN_CENTER);
            
            

     
            
            PdfPTable my_report_table1 = new PdfPTable(2);
            
            //left side
            PdfPCell table_cell1 = new PdfPCell();
            my_report_table1.setWidthPercentage(100);

            table_cell1 = new PdfPCell(new Phrase(" ", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table1.addCell(table_cell1);

            //right side
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh:mm:ss a");
            java.util.Date printDate = new java.util.Date();
            dateFormat.format(printDate);
           
            table_cell1 = new PdfPCell(new Phrase("Print Date & Time :  " + dateFormat.format(printDate), new Font(Font.NORMAL, 11, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //table_cell6.setBorder(Rectangle.NO_BORDER);
            
            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            my_report_table1.addCell(table_cell1);
                                 

            //TABLE HEADER
            PdfPTable my_report_table = new PdfPTable(6);
            float[] columnWidths = {0.5f,0.8f,0.8f,0.8f,0.8f,0.8f};
            my_report_table.setWidths(columnWidths);
            my_report_table.setWidthPercentage(100);
            String[] headers1 = new String[]{
                "Name","Roll","Reg", "Session", "Semester","CGPA"
            };

            PdfPTable table1 = new PdfPTable(headers1.length);
            table1.setWidths(columnWidths);
            table1.setWidthPercentage(100);
            for (String header : headers1) {
                PdfPCell cell = new PdfPCell();

                cell.setGrayFill(0.9f);
                cell.setPhrase(new Phrase(header, new Font(Font.NORMAL, 15, Font.BOLD)));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table1.addCell(cell);
            }
            table1.completeRow();
            
            ////END OF HEADER
            
            ///////////////
            
            PdfPTable my_report_table2 = new PdfPTable(6);
            
            //left side
            PdfPCell table_cell2 = new PdfPCell();
            my_report_table2.setWidthPercentage(100);         
            my_report_table2.setWidths(columnWidths);

            
            ///////////////////
            
              try {

            
            //String sqlQry="Select * from emp_info ORDER BY Emp_ID ASC";
           String Result = "6th Semester";
            String sqlSrch = "SELECT * FROM  sixth_semester_result WHERE semester='"+Result+"' AND session='"+jComboSessionReport.getSelectedItem()+"'";

            prepstmnt = con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            
            while(res.next())
            {
                
            Name=res.getString("name");  
            table_cell2 = new PdfPCell(new Phrase(Name, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Roll = res.getString("roll");
             table_cell2 = new PdfPCell(new Phrase(Roll, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Reg = res.getString("reg");
             table_cell2 = new PdfPCell(new Phrase(Reg, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Session = res.getString("session");
            table_cell2 = new PdfPCell(new Phrase(Session, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            Semester = res.getString("semester");
            table_cell2 = new PdfPCell(new Phrase(Semester, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            CGPA = res.getString("cgpa");
            table_cell2 = new PdfPCell(new Phrase(CGPA, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
             
                
               
                
            }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
           

           ///////////////

            document.add(mainparagraph);
            document.add(paragraph3);
            document.add(my_report_table1);
           
            document.add(paragraph3);
            document.add(table1);
            document.add(my_report_table2);
            
            
           

            // document.add(table);
        } catch (DocumentException | HeadlessException e56) {
            System.err.println(e56.getMessage());
        }

        document.close(); 
     }
     void print_Seventh_Semester_Result() throws SQLException, BadElementException, IOException {
         Document document = new Document(PageSize.A4.rotate());
       // Document document = new Document(PageSize.A4);
        Font ff1 = new Font(Font.BOLD, 13);
        ff1.setStyle(Font.UNDERLINE);
        ff1.setColor(Color.BLACK);
        ff1.setStyle(Font.BOLD);
        
        Font ff5 = new Font(Font.BOLD, 18);
        ff5.setStyle(Font.UNDERLINE);
        ff5.setColor(Color.BLACK);
        ff5.setStyle(Font.BOLD);
        Font ff3 = new Font(Font.NORMAL, 11);
        ff3.setStyle(Font.COURIER);
        ff3.setColor(Color.BLACK);
        Font ff4 = new Font(Font.BOLD, 10);
        ff4.setStyle(Font.NORMAL);
        ff4.setColor(Color.BLACK);
        Paragraph paragraph3 = new Paragraph("\n");         
        paragraph3.setAlignment(Element.ALIGN_CENTER);
       

        try {

            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("Result.pdf"));

            document.open();

            PdfContentByte cb = writer.getDirectContent();

            PdfPTable table = new PdfPTable(2);

            PdfPCell cell5 = new PdfPCell();

            String Name="",Roll="",Reg="",Session="",Semester="",CGPA="";

          
            
            ///////Name
          
             try{
            
            
            String Result = "7th Semester";
            String sqlSrch = "SELECT * FROM  seventh_semster_result WHERE semester='"+Result+"' AND session='"+jComboSessionReport.getSelectedItem()+"'";
            
            prepstmnt = con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            
            while(res.next())
                {
                Name = res.getString("name");
                Roll = res.getString("roll");
                Reg = res.getString("reg");
                Session = res.getString("session");
                Semester= res.getString("semester");
                CGPA=res.getString("cgpa");
                    
               
             
              
            }
            
            
            
        }catch(Exception e)
        {
            System.out.println("Error ==> "+e);
        }
             Paragraph Title = new Paragraph("Chittagong Polytechnic Institute", new Font(Font.BOLD, 40, Font.BOLD,Color.DARK_GRAY));
            Title.setAlignment(Element.ALIGN_CENTER);
            document.add(Title);
            Paragraph Subtitle = new Paragraph("Nasirabad, Chittagong - 4209", new Font(Font.BOLD, 20, Font.BOLD,Color.DARK_GRAY));
            Subtitle.setAlignment(Element.ALIGN_CENTER);
            document.add(Subtitle);

            Paragraph mainparagraph = new Paragraph("7th Semester Result", new Font(Font.BOLD, 30, Font.BOLD,Color.DARK_GRAY));
            mainparagraph.setAlignment(Element.ALIGN_CENTER);
            
            

     
            
            PdfPTable my_report_table1 = new PdfPTable(2);
            
            //left side
            PdfPCell table_cell1 = new PdfPCell();
            my_report_table1.setWidthPercentage(100);

            table_cell1 = new PdfPCell(new Phrase(" ", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table1.addCell(table_cell1);

            //right side
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh:mm:ss a");
            java.util.Date printDate = new java.util.Date();
            dateFormat.format(printDate);
           
            table_cell1 = new PdfPCell(new Phrase("Print Date & Time :  " + dateFormat.format(printDate), new Font(Font.NORMAL, 11, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //table_cell6.setBorder(Rectangle.NO_BORDER);
            
            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            my_report_table1.addCell(table_cell1);
                                 

            //TABLE HEADER
            PdfPTable my_report_table = new PdfPTable(6);
            float[] columnWidths = {0.5f,0.8f,0.8f,0.8f,0.8f,0.8f};
            my_report_table.setWidths(columnWidths);
            my_report_table.setWidthPercentage(100);
            String[] headers1 = new String[]{
                "Name","Roll","Reg", "Session", "Semester","CGPA"
            };

            PdfPTable table1 = new PdfPTable(headers1.length);
            table1.setWidths(columnWidths);
            table1.setWidthPercentage(100);
            for (String header : headers1) {
                PdfPCell cell = new PdfPCell();

                cell.setGrayFill(0.9f);
                cell.setPhrase(new Phrase(header, new Font(Font.NORMAL, 15, Font.BOLD)));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table1.addCell(cell);
            }
            table1.completeRow();
            
            ////END OF HEADER
            
            ///////////////
            
            PdfPTable my_report_table2 = new PdfPTable(6);
            
            //left side
            PdfPCell table_cell2 = new PdfPCell();
            my_report_table2.setWidthPercentage(100);         
            my_report_table2.setWidths(columnWidths);

            
            ///////////////////
            
              try {

            
            //String sqlQry="Select * from emp_info ORDER BY Emp_ID ASC";
           String Result = "7th Semester";
            String sqlSrch = "SELECT * FROM  seventh_semster_result WHERE semester='"+Result+"' AND session='"+jComboSessionReport.getSelectedItem()+"'";

            prepstmnt = con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            
            while(res.next())
            {
                
            Name=res.getString("name");  
            table_cell2 = new PdfPCell(new Phrase(Name, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Roll = res.getString("roll");
             table_cell2 = new PdfPCell(new Phrase(Roll, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Reg = res.getString("reg");
             table_cell2 = new PdfPCell(new Phrase(Reg, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Session = res.getString("session");
            table_cell2 = new PdfPCell(new Phrase(Session, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            Semester = res.getString("semester");
            table_cell2 = new PdfPCell(new Phrase(Semester, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            CGPA = res.getString("cgpa");
            table_cell2 = new PdfPCell(new Phrase(CGPA, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
             
                
               
                
            }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
           

           ///////////////

            document.add(mainparagraph);
            document.add(paragraph3);
            document.add(my_report_table1);
           
            document.add(paragraph3);
            document.add(table1);
            document.add(my_report_table2);
            
            
           

            // document.add(table);
        } catch (DocumentException | HeadlessException e56) {
            System.err.println(e56.getMessage());
        }

        document.close(); 
     }
     
     
     void print_Eighth_Semester_Result() throws SQLException, BadElementException, IOException {
         Document document = new Document(PageSize.A4.rotate());
       // Document document = new Document(PageSize.A4);
        Font ff1 = new Font(Font.BOLD, 13);
        ff1.setStyle(Font.UNDERLINE);
        ff1.setColor(Color.BLACK);
        ff1.setStyle(Font.BOLD);
        
        Font ff5 = new Font(Font.BOLD, 18);
        ff5.setStyle(Font.UNDERLINE);
        ff5.setColor(Color.BLACK);
        ff5.setStyle(Font.BOLD);
        Font ff3 = new Font(Font.NORMAL, 11);
        ff3.setStyle(Font.COURIER);
        ff3.setColor(Color.BLACK);
        Font ff4 = new Font(Font.BOLD, 10);
        ff4.setStyle(Font.NORMAL);
        ff4.setColor(Color.BLACK);
        Paragraph paragraph3 = new Paragraph("\n");         
        paragraph3.setAlignment(Element.ALIGN_CENTER);
       

        try {

            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("Result.pdf"));

            document.open();

            PdfContentByte cb = writer.getDirectContent();

            PdfPTable table = new PdfPTable(2);

            PdfPCell cell5 = new PdfPCell();

            String Name="",Roll="",Reg="",Session="",Semester="",CGPA="";

          
            
            ///////Name
          
             try{
            
            
            String Result = "8th Semester";
            String sqlSrch = "SELECT * FROM  eighth_semester_result WHERE semester='"+Result+"' AND session='"+jComboSessionReport.getSelectedItem()+"'";
            
            prepstmnt = con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            
            while(res.next())
                {
                Name = res.getString("name");
                Roll = res.getString("roll");
                Reg = res.getString("reg");
                Session = res.getString("session");
                Semester= res.getString("semester");
                CGPA=res.getString("cgpa");
                    
               
             
              
            }
            
            
            
        }catch(Exception e)
        {
            System.out.println("Error ==> "+e);
        }
             Paragraph Title = new Paragraph("Chittagong Polytechnic Institute", new Font(Font.BOLD, 40, Font.BOLD,Color.DARK_GRAY));
            Title.setAlignment(Element.ALIGN_CENTER);
            document.add(Title);
            Paragraph Subtitle = new Paragraph("Nasirabad, Chittagong - 4209", new Font(Font.BOLD, 20, Font.BOLD,Color.DARK_GRAY));
            Subtitle.setAlignment(Element.ALIGN_CENTER);
            document.add(Subtitle);

            Paragraph mainparagraph = new Paragraph("8th Semester Result", new Font(Font.BOLD, 30, Font.BOLD,Color.DARK_GRAY));
            mainparagraph.setAlignment(Element.ALIGN_CENTER);
            
            

     
            
            PdfPTable my_report_table1 = new PdfPTable(2);
            
            //left side
            PdfPCell table_cell1 = new PdfPCell();
            my_report_table1.setWidthPercentage(100);

            table_cell1 = new PdfPCell(new Phrase(" ", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table1.addCell(table_cell1);

            //right side
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh:mm:ss a");
            java.util.Date printDate = new java.util.Date();
            dateFormat.format(printDate);
           
            table_cell1 = new PdfPCell(new Phrase("Print Date & Time :  " + dateFormat.format(printDate), new Font(Font.NORMAL, 11, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //table_cell6.setBorder(Rectangle.NO_BORDER);
            
            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            my_report_table1.addCell(table_cell1);
                                 

            //TABLE HEADER
            PdfPTable my_report_table = new PdfPTable(6);
            float[] columnWidths = {0.5f,0.8f,0.8f,0.8f,0.8f,0.8f};
            my_report_table.setWidths(columnWidths);
            my_report_table.setWidthPercentage(100);
            String[] headers1 = new String[]{
                "Name","Roll","Reg", "Session", "Semester","CGPA"
            };

            PdfPTable table1 = new PdfPTable(headers1.length);
            table1.setWidths(columnWidths);
            table1.setWidthPercentage(100);
            for (String header : headers1) {
                PdfPCell cell = new PdfPCell();

                cell.setGrayFill(0.9f);
                cell.setPhrase(new Phrase(header, new Font(Font.NORMAL, 15, Font.BOLD)));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table1.addCell(cell);
            }
            table1.completeRow();
            
            ////END OF HEADER
            
            ///////////////
            
            PdfPTable my_report_table2 = new PdfPTable(6);
            
            //left side
            PdfPCell table_cell2 = new PdfPCell();
            my_report_table2.setWidthPercentage(100);         
            my_report_table2.setWidths(columnWidths);

            
            ///////////////////
            
              try {

            
            //String sqlQry="Select * from emp_info ORDER BY Emp_ID ASC";
           String Result = "8th Semester";
            String sqlSrch = "SELECT * FROM  eigth_semester_result WHERE semester='"+Result+"' AND session='"+jComboSessionReport.getSelectedItem()+"'";

            prepstmnt = con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            
            while(res.next())
            {
                
            Name=res.getString("name");  
            table_cell2 = new PdfPCell(new Phrase(Name, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Roll = res.getString("roll");
             table_cell2 = new PdfPCell(new Phrase(Roll, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Reg = res.getString("reg");
             table_cell2 = new PdfPCell(new Phrase(Reg, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Session = res.getString("session");
            table_cell2 = new PdfPCell(new Phrase(Session, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            Semester = res.getString("semester");
            table_cell2 = new PdfPCell(new Phrase(Semester, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            CGPA = res.getString("cgpa");
            table_cell2 = new PdfPCell(new Phrase(CGPA, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
             
                
               
                
            }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
           

           ///////////////

            document.add(mainparagraph);
            document.add(paragraph3);
            document.add(my_report_table1);
           
            document.add(paragraph3);
            document.add(table1);
            document.add(my_report_table2);
            
            
           

            // document.add(table);
        } catch (DocumentException | HeadlessException e56) {
            System.err.println(e56.getMessage());
        }

        document.close(); 
     }
    
    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        Object Result = jComboSemReport.getSelectedItem();
        
        if("1st Semester"==Result)
        {
           try {
               print_First_Semester_Result();
           } catch (SQLException | BadElementException | IOException ex) {
               Logger.getLogger(Panel_ViewResult.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
        
        if("2nd Semester"==Result)
        {
           try {
               print_Second_Semester_Result();
           } catch (SQLException | BadElementException | IOException ex) {
               Logger.getLogger(Panel_ViewResult.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
        
         if("3rd Semester"==Result)
        {
           try {
               print_Third_Semester_Result();
           } catch (SQLException | BadElementException | IOException ex) {
               Logger.getLogger(Panel_ViewResult.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
         
          if("4th Semester"==Result)
        {
           try {
               print_Fourth_Semester_Result();
           } catch (SQLException | BadElementException | IOException ex) {
               Logger.getLogger(Panel_ViewResult.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
          
           if("5th Semester"==Result)
        {
           try {
               print_Fifth_Semester_Result();
           } catch (SQLException | BadElementException | IOException ex) {
               Logger.getLogger(Panel_ViewResult.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
        
            if("6th Semester"==Result)
        {
           try {
               print_Sixth_Semester_Result();
           } catch (SQLException | BadElementException | IOException ex) {
               Logger.getLogger(Panel_ViewResult.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
            
             if("7th Semester"==Result)
        {
           try {
               print_Seventh_Semester_Result();
           } catch (SQLException | BadElementException | IOException ex) {
               Logger.getLogger(Panel_ViewResult.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
             
              if("8th Semester"==Result)
        {
           try {
               print_Eighth_Semester_Result();
           } catch (SQLException | BadElementException | IOException ex) {
               Logger.getLogger(Panel_ViewResult.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
        if (Desktop.isDesktopSupported()) {
            try {
                File myfile = new File("Result.pdf");

                Desktop.getDesktop().open(myfile);
            } catch (IOException e17) {
                // JOptionPane.showMessageDialog(null, e17.toString());
            }
        }
    }//GEN-LAST:event_btnReportActionPerformed

    private void jButton126ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton126ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton126ActionPerformed

    private void jButton127ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton127ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton127ActionPerformed

    private void jButton130ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton130ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton130ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReport;
    private javax.swing.JButton jButton126;
    private javax.swing.JButton jButton127;
    private javax.swing.JButton jButton128;
    private javax.swing.JButton jButton129;
    private javax.swing.JButton jButton130;
    private javax.swing.JButton jButton131;
    private javax.swing.JComboBox jComboSem;
    private javax.swing.JComboBox jComboSemReport;
    private javax.swing.JComboBox jComboSemester;
    private javax.swing.JComboBox jComboSession;
    private javax.swing.JComboBox jComboSessionReport;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel153;
    private javax.swing.JLabel jLabel154;
    private javax.swing.JLabel jLabel155;
    private javax.swing.JLabel jLabel156;
    private javax.swing.JLabel jLabel157;
    private javax.swing.JLabel jLabel158;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel121;
    private javax.swing.JPanel jPanel131;
    private javax.swing.JPanel jPanel132;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JTable jTableViewResult;
    private javax.swing.JTextField jTextFieldSearch;
    private javax.swing.JTextField txtCGPA;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtReg;
    private javax.swing.JTextField txtRoll;
    // End of variables declaration//GEN-END:variables
}
