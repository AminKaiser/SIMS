
package Project_Panel;

import DatabaseConnection.DBConnectioncode;
import com.lowagie.text.BadElementException;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Element;
import com.lowagie.text.Font;
import com.lowagie.text.PageSize;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Phrase;
import com.lowagie.text.Rectangle;
import com.lowagie.text.pdf.PdfContentByte;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.Date;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;


public class Panel_Document extends javax.swing.JPanel {

    Connection con;
    PreparedStatement prepstmnt = null;
    ResultSet res = null;
    
    String date="";
    java.util.Date now= new java.util.Date();
    
    
    public Panel_Document() {
        initComponents();
        
        try {
            con = DBConnectioncode.DBConnectioncode();

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Panel_Document.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        jDateCurrent.setDate(now);
        Withdraw.setDate(now);
        
        
        
        try{
            String sqlSrch = "Select distinct(session) AS Session from Session ORDER BY session ASC";
            prepstmnt=con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            while(res.next())
            {
               
                String ses=res.getString("session");
               jComboSession.addItem(ses);
               jComboBox50.addItem(ses);
               
            }
           
        }catch(SQLException e)
        {
        }
        
        //Roll Call
        
        TableShow();
        
        try{
           
            String sqlSrch = "Select distinct(Stu_Roll) AS StuRoll from  student_information";
            prepstmnt=con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            while(res.next())
            {
               
                String roll=res.getString("StuRoll");
                jComboRoll.addItem(roll);
               
            }
           
        }catch(SQLException e)
        {
            
        }
        
        //Teachers Name
        
        try{
           
            String sqlSrch = "Select distinct(Teacher_Name) AS teacherName from  teacher_information";
            prepstmnt=con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            while(res.next())
            {
               
                String tname=res.getString("teacherName");
                jComboTeacher.addItem(tname);
               
            }
           
        }catch(SQLException e)
        {
            
        }
        
        //Checked BY
        
          try{
           
            String sqlSrch = "Select distinct(Teacher_Name) AS teacherName from  teacher_information";
            prepstmnt=con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            while(res.next())
            {
               
                String tname=res.getString("teacherName");
                jCombochecked.addItem(tname);
               
            }
           
        }catch(SQLException e)
        {
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel16 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jComboSemester = new javax.swing.JComboBox();
        jComboSession = new javax.swing.JComboBox();
        txtReg = new javax.swing.JTextField();
        stuRoll = new javax.swing.JTextField();
        stuname = new javax.swing.JTextField();
        jComboRoll = new javax.swing.JComboBox<>();
        jPanel13 = new javax.swing.JPanel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jComboTeacher = new javax.swing.JComboBox();
        jLabel121 = new javax.swing.JLabel();
        jCombochecked = new javax.swing.JComboBox();
        jCombocriteria = new javax.swing.JComboBox();
        jDateCurrent = new com.toedter.calendar.JDateChooser();
        Withdraw = new com.toedter.calendar.JDateChooser();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        TableDocument = new javax.swing.JTable();
        jPanel92 = new javax.swing.JPanel();
        jLabel126 = new javax.swing.JLabel();
        jComboBox50 = new javax.swing.JComboBox();
        jLabel139 = new javax.swing.JLabel();
        jTextFieldRollNo = new javax.swing.JTextField();
        jButton108 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jButton45 = new javax.swing.JButton();
        jButton46 = new javax.swing.JButton();
        jButton96 = new javax.swing.JButton();
        jButton97 = new javax.swing.JButton();
        jButton98 = new javax.swing.JButton();
        jButton99 = new javax.swing.JButton();
        jTextFieldSearch = new javax.swing.JTextField();

        jPanel16.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel61.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel61.setText("Name :");
        jPanel16.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 13, 127, 29));

        jLabel64.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel64.setText("Roll :");
        jPanel16.add(jLabel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 60, 127, 29));

        jLabel65.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel65.setText("Reg. No :");
        jPanel16.add(jLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 107, 127, 29));

        jLabel67.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel67.setText("Session :");
        jPanel16.add(jLabel67, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 154, 127, 29));

        jLabel68.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel68.setText("Semester :");
        jPanel16.add(jLabel68, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 201, 127, 29));

        jComboSemester.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jComboSemester.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "1st Semester", "2nd Semester", "3rd Semester", "4th Semester", "5th Semester", "6th Semester", "7th Semester", "8th Semester", "Ex- Semester" }));
        jPanel16.add(jComboSemester, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 201, 216, -1));

        jComboSession.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jComboSession.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));
        jPanel16.add(jComboSession, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 154, 216, -1));

        txtReg.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel16.add(txtReg, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 107, 216, -1));

        stuRoll.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel16.add(stuRoll, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 60, 117, -1));

        stuname.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel16.add(stuname, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 13, 216, -1));

        jComboRoll.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboRoll.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        jComboRoll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboRollActionPerformed(evt);
            }
        });
        jPanel16.add(jComboRoll, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 60, 89, 28));

        jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel69.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        jLabel69.setText("Date of Issue :");

        jLabel70.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel70.setText("Date of Withdrawn:");

        jLabel71.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel71.setText("Criteria :");

        jLabel72.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel72.setText("Written By :");

        jComboTeacher.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jComboTeacher.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));

        jLabel121.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel121.setText("Checked By :");

        jCombochecked.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jCombochecked.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));

        jCombocriteria.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jCombocriteria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Testimonial", "Marksheet(1st Semester)", "Marksheet(2nd Semester)", "Marksheet(3rd Semester)", "Marksheet(4th Semester)", "Character Certiicate", "Course Complete Certificate", "Studentship Certificate" }));

        jDateCurrent.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        Withdraw.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCombocriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateCurrent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel70, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Withdraw, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel121, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                            .addComponent(jLabel72, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCombochecked, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel13Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jComboTeacher, jCombochecked, jCombocriteria});

        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jDateCurrent, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Withdraw, javax.swing.GroupLayout.PREFERRED_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(jLabel70, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCombocriteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel72, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboTeacher, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel121, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCombochecked, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel13Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jComboTeacher, jCombochecked, jCombocriteria});

        jPanel13Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Withdraw, jDateCurrent});

        jPanel18.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        TableDocument.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "    Name", "   Roll", "   Reg ", "  Session", "  Semester", "  Criteria", "  Date Of Issue ", "  Withdrawn Date", "  Written By", "  Checked By"
            }
        ));
        TableDocument.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableDocumentMouseClicked(evt);
            }
        });
        TableDocument.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TableDocumentKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TableDocumentKeyReleased(evt);
            }
        });
        jScrollPane8.setViewportView(TableDocument);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 909, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel92.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel126.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel126.setText("Session :");

        jComboBox50.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jComboBox50.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));

        jLabel139.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel139.setText("Roll :");

        jTextFieldRollNo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jButton108.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton108.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project_Panel/search.gif"))); // NOI18N
        jButton108.setText("Search");
        jButton108.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton108ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel92Layout = new javax.swing.GroupLayout(jPanel92);
        jPanel92.setLayout(jPanel92Layout);
        jPanel92Layout.setHorizontalGroup(
            jPanel92Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel92Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel126)
                .addGap(18, 18, 18)
                .addComponent(jComboBox50, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel139, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldRollNo, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jButton108)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel92Layout.setVerticalGroup(
            jPanel92Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel92Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel92Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton108, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel92Layout.createSequentialGroup()
                        .addGroup(jPanel92Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextFieldRollNo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                            .addComponent(jLabel126, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel139, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox50, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel17.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton45.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton45.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project_Panel/view.gif"))); // NOI18N
        jButton45.setText("Preview");
        jButton45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton45ActionPerformed(evt);
            }
        });

        jButton46.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton46.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project_Panel/save2.png"))); // NOI18N
        jButton46.setText("Save");
        jButton46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton46ActionPerformed(evt);
            }
        });

        jButton96.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton96.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project_Panel/Trash-can16.png"))); // NOI18N
        jButton96.setText("Delete");
        jButton96.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton96ActionPerformed(evt);
            }
        });

        jButton97.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton97.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project_Panel/Print.png"))); // NOI18N
        jButton97.setText("Print");
        jButton97.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton97ActionPerformed(evt);
            }
        });

        jButton98.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton98.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project_Panel/Update.png"))); // NOI18N
        jButton98.setText("Update");
        jButton98.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton98ActionPerformed(evt);
            }
        });

        jButton99.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton99.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project_Panel/refresh.png"))); // NOI18N
        jButton99.setText("Refresh");
        jButton99.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton99ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton45)
                .addGap(26, 26, 26)
                .addComponent(jButton97, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton99)
                .addContainerGap())
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jButton46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton96)
                .addGap(18, 18, 18)
                .addComponent(jButton98)
                .addGap(22, 22, 22))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton46, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton96, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton98, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton97, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton99, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton45, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTextFieldSearch.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel92, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel92, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboRollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboRollActionPerformed
        
        try{
            
            String sqlSrch = "Select * from   student_information where Stu_Roll='"+jComboRoll.getSelectedItem()+"'";
            
            prepstmnt=con.prepareStatement(sqlSrch);
            res=prepstmnt.executeQuery();
            while(res.next())
            {
              
                String name = res.getString("Stu_Name");
                String roll = res.getString("Stu_Roll");
                String regno = res.getString("Stu_RegNo");
                String session = res.getString("Stu_Session");
                String semester = res.getString("Stu_semester");
             
                stuname.setText(name);
                stuRoll.setText(roll);
                txtReg.setText(regno);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(semester);
              
            }
            
            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        
        
       
        
        
    }//GEN-LAST:event_jComboRollActionPerformed

    private void jButton46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton46ActionPerformed
        
        java.sql.Date current= new java.sql.Date(jDateCurrent.getDate().getTime());
        java.sql.Date withdraw= new java.sql.Date(Withdraw.getDate().getTime());
        try{
            
            String sqlQry = "INSERT into document_info(Name,Roll,Reg,Session,Semester,DateOfIssue,DateOWithDraw,criteria,written_by,Checked_By) values (?,?,?,?,?,?,?,?,?,?)";
            
            prepstmnt = con.prepareStatement(sqlQry);
            
            prepstmnt.setString(1, stuname.getText());
            prepstmnt.setString(2, stuRoll.getText());
            prepstmnt.setString(3, txtReg.getText());
            prepstmnt.setString(4, (String) jComboSession.getSelectedItem());
            prepstmnt.setString(5, (String) jComboSemester.getSelectedItem());
            
            prepstmnt.setDate(6,current);
            prepstmnt.setDate(7,withdraw);
            prepstmnt.setString(8, (String) jCombocriteria.getSelectedItem());
            prepstmnt.setString(9, (String) jComboTeacher.getSelectedItem());
            prepstmnt.setString(10, (String) jCombochecked.getSelectedItem());
            
            
            
           int i = prepstmnt.executeUpdate();

            if (i > 0) {
                JOptionPane.showMessageDialog(this, "Data Saved!");
            }

        } catch (SQLException | HeadlessException e)
        {
            JOptionPane.showMessageDialog(null,e);
                    
        }
        TableRefresh();
        TableShow();
        Refresh();
    }//GEN-LAST:event_jButton46ActionPerformed

    private void jButton108ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton108ActionPerformed
        
        int test = 1;
        try {

            //String SearchRoll = SearchStudent.getText();
            String sqlSrch = "SELECT * FROM  document_info WHERE Roll='"+jTextFieldRollNo.getText()+"' AND Session= '"+jComboBox50.getSelectedItem().toString()+"'";
            prepstmnt = con.prepareStatement(sqlSrch);
            res = prepstmnt.executeQuery();
            
            while (res.next()) {
                
                String Name = res.getString("Name");
                String roll = res.getString("Roll");
                String reg = res.getString("Reg");
                String session = res.getString("Session");
                String seme = res.getString("Semester");
                
                Date issuedate = res.getDate("DateOfIssue");
                Date withdrawDate = res.getDate("DateOWithDraw");
                String criteria = res.getString("criteria");
                String writtenby = res.getString("written_by");
                String chkedby = res.getString("Checked_By");
                
                
                stuname.setText(Name);
                stuRoll.setText(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(seme);
                
                jDateCurrent.setDate(issuedate);
                Withdraw.setDate(withdrawDate);
                jCombocriteria.setSelectedItem(criteria);
                jComboTeacher.setSelectedItem(writtenby);
                jCombochecked.setSelectedItem(chkedby);
                
            
              
                
                test = 0;
                break;
            }

            if (test == 1) {
                JOptionPane.showMessageDialog(this, "Data Not Found");
            }

        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton108ActionPerformed

    private void TableDocumentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableDocumentMouseClicked
        
        try{
            
            int row = TableDocument.getSelectedRow();
            String Table_Click = (TableDocument.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM  document_info WHERE Roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
            
            while (res.next()) {
                
                String Name = res.getString("Name");
                String roll = res.getString("Roll");
                String reg = res.getString("Reg");
                String session = res.getString("Session");
                String seme = res.getString("Semester");
                
                Date issuedate = res.getDate("DateOfIssue");
                Date withdrawDate = res.getDate("DateOWithDraw");
                String criteria = res.getString("criteria");
                String writtenby = res.getString("written_by");
                String chkedby = res.getString("Checked_By");
                
                
                stuname.setText(Name);
                stuRoll.setText(roll);
                
                jComboRoll.setSelectedItem(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(seme);
                
                jDateCurrent.setDate(issuedate);
                Withdraw.setDate(withdrawDate);
                jCombocriteria.setSelectedItem(criteria);
                jComboTeacher.setSelectedItem(writtenby);
                jCombochecked.setSelectedItem(chkedby);
                
            
            }

            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_TableDocumentMouseClicked

    private void TableDocumentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableDocumentKeyReleased
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_UP || evt.getKeyCode()==KeyEvent.VK_DOWN)
            
        {
            try{
                
                int row = TableDocument.getSelectedRow();
            String Table_Click = (TableDocument.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM document_info WHERE Roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
                
            while (res.next()) {
                
                String Name = res.getString("Name");
                String roll = res.getString("Roll");
                String reg = res.getString("Reg");
                String session = res.getString("Session");
                String seme = res.getString("Semester");
                
                Date issuedate = res.getDate("DateOfIssue");
                Date withdrawDate = res.getDate("DateOWithDraw");
                String criteria = res.getString("criteria");
                String writtenby = res.getString("written_by");
                String chkedby = res.getString("Checked_By");
                
                
                stuname.setText(Name);
                stuRoll.setText(roll);
                jComboRoll.setSelectedItem(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(seme);
                
                jDateCurrent.setDate(issuedate);
                Withdraw.setDate(withdrawDate);
                jCombocriteria.setSelectedItem(criteria);
                jComboTeacher.setSelectedItem(writtenby);
                jCombochecked.setSelectedItem(chkedby);
                
            
            }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
            
        }
    }//GEN-LAST:event_TableDocumentKeyReleased

    private void TableDocumentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableDocumentKeyPressed
        // TODO add your handling code here:
        
        if(evt.getKeyCode()==KeyEvent.VK_UP || evt.getKeyCode()==KeyEvent.VK_DOWN)
            
        {
            try{
                
                int row = TableDocument.getSelectedRow();
            String Table_Click = (TableDocument.getModel().getValueAt(row, 1).toString());
            String sqlSearch = "SELECT * FROM document_info WHERE Roll ='"+Table_Click+"'";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
                
            while (res.next()) {
                
                String Name = res.getString("Name");
                String roll = res.getString("Roll");
                String reg = res.getString("Reg");
                String session = res.getString("Session");
                String seme = res.getString("Semester");
                
                Date issuedate = res.getDate("DateOfIssue");
                Date withdrawDate = res.getDate("DateOWithDraw");
                String criteria = res.getString("criteria");
                String writtenby = res.getString("written_by");
                String chkedby = res.getString("Checked_By");
                
                
                stuname.setText(Name);
                stuRoll.setText(roll);
                jComboRoll.setSelectedItem(roll);
                txtReg.setText(reg);
                jComboSession.setSelectedItem(session);
                jComboSemester.setSelectedItem(seme);
                
                jDateCurrent.setDate(issuedate);
                Withdraw.setDate(withdrawDate);
                jCombocriteria.setSelectedItem(criteria);
                jComboTeacher.setSelectedItem(writtenby);
                jCombochecked.setSelectedItem(chkedby);
                
            
            }
                
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
            
        }
    }//GEN-LAST:event_TableDocumentKeyPressed

    private void jButton98ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton98ActionPerformed
        // TODO add your handling code here:
        
        java.sql.Date current= new java.sql.Date(jDateCurrent.getDate().getTime());
        java.sql.Date withdraw= new java.sql.Date(Withdraw.getDate().getTime());
        
        try{
            
           
            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton98ActionPerformed

    private void jButton96ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton96ActionPerformed
         int msg = JOptionPane.YES_NO_OPTION;

        int result = JOptionPane.showConfirmDialog(null, "Are u Sure?", "Confirm ? ", msg);

        if (result == 0) {
            try {
                String sqlQry = "DELETE from  document_info where Roll=?";

                prepstmnt = con.prepareStatement(sqlQry);

                prepstmnt.setString(1, stuRoll.getText());

                int i = prepstmnt.executeUpdate();
                if (i > 0) {
                    JOptionPane.showMessageDialog(this, "Deleted Sucessfully!");
                }
            } catch (SQLException | HeadlessException e) {
                JOptionPane.showMessageDialog(null, e);
            }

            }
        TableRefresh();
        TableShow();
        Refresh();
       
        
        
    }//GEN-LAST:event_jButton96ActionPerformed

    private void jTextFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyReleased
        // TODO add your handling code here:
        
         try{
            DefaultTableModel tb = (DefaultTableModel)TableDocument.getModel();
         int row=TableDocument.getRowCount();
         for(int i=row-1;i>=0;i--)
         {
            tb.removeRow(i);
         }
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
         
         try{
            DefaultTableModel tb = (DefaultTableModel)TableDocument.getModel();
            String sqlSearch = "SELECT * FROM document_info where Name like '%"+jTextFieldSearch.getText()+"%' OR Roll like '%"+jTextFieldSearch.getText()+"%' ORDER BY Semester AND Roll ASC";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
            
            while(res.next())
            {
                String Name = res.getString("Name");
                String roll = res.getString("Roll");
                String reg = res.getString("Reg");
                String session = res.getString("Session");
                String seme = res.getString("Semester");
                String criteria = res.getString("criteria");
                Date issuedate = res.getDate("DateOfIssue");
                Date withdrawDate = res.getDate("DateOWithDraw");
                
                String writtenby = res.getString("written_by");
                String chkedby = res.getString("Checked_By");
               
                
                
                tb.addRow(new Object[]{Name,roll,reg,session,seme,criteria,issuedate,withdrawDate,writtenby,chkedby});
                
            }
            
        }catch(Exception e)
        {
           JOptionPane.showMessageDialog(null, e);
        }
        
 
        
        
    }//GEN-LAST:event_jTextFieldSearchKeyReleased

    private void jButton99ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton99ActionPerformed
        // TODO add your handling code here:
        
        Refresh();
    }//GEN-LAST:event_jButton99ActionPerformed

    void print_document() throws SQLException, BadElementException, IOException {
        
        java.sql.Date current= new java.sql.Date(jDateCurrent.getDate().getTime());
        java.sql.Date withdraw= new java.sql.Date(Withdraw.getDate().getTime());
        Document document = new Document(PageSize.A4.rotate());
       // Document document = new Document(PageSize.A4);
        Font ff1 = new Font(Font.BOLD, 13);
        ff1.setStyle(Font.UNDERLINE);
        ff1.setColor(Color.BLACK);
        ff1.setStyle(Font.BOLD);
        
        Font ff5 = new Font(Font.BOLD, 18);
        ff5.setStyle(Font.UNDERLINE);
        ff5.setColor(Color.BLACK);
        ff5.setStyle(Font.BOLD);
        Font ff3 = new Font(Font.NORMAL, 11);
        ff3.setStyle(Font.COURIER);
        ff3.setColor(Color.BLACK);
        Font ff4 = new Font(Font.BOLD, 10);
        ff4.setStyle(Font.NORMAL);
        ff4.setColor(Color.BLACK);

        

        Paragraph paragraph3 = new Paragraph("\n");         
        paragraph3.setAlignment(Element.ALIGN_CENTER);
       

        try {

            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("document.pdf"));

            document.open();

            PdfContentByte cb = writer.getDirectContent();

            PdfPTable table = new PdfPTable(2);

            PdfPCell cell5 = new PdfPCell();
            
           String name="",roll="",regno="",session="",semester="";
           String criteria;
           String wrtby ="",chkby="";
           
           
           
           
           name=stuname.getText();
           roll=stuRoll.getText();
           regno=txtReg.getText();
           session=(String) jComboSession.getSelectedItem();
           semester = jComboSemester.getSelectedItem().toString();
           
           criteria=jCombocriteria.getSelectedItem().toString();
           wrtby=jComboTeacher.getSelectedItem().toString();
           chkby = jCombochecked.getSelectedItem().toString();
           
           
           
           
            Paragraph Title = new Paragraph("Chittagong Polytechnic Institute", new Font(Font.BOLD, 40, Font.BOLD,Color.DARK_GRAY));
            Title.setAlignment(Element.ALIGN_CENTER);
            document.add(Title);
            Paragraph Subtitle = new Paragraph("Nasirabad, Chittagong - 4209", new Font(Font.BOLD, 20, Font.BOLD,Color.DARK_GRAY));
            Subtitle.setAlignment(Element.ALIGN_CENTER);
            document.add(Subtitle);

            Paragraph mainparagraph = new Paragraph("Document Information", new Font(Font.BOLD, 30, Font.BOLD,Color.DARK_GRAY));
            mainparagraph.setAlignment(Element.ALIGN_CENTER);
            
            
            
            PdfPTable my_report_table1 = new PdfPTable(2);
            //left side
            PdfPCell table_cell1 = new PdfPCell();
            my_report_table1.setWidthPercentage(100);

            table_cell1 = new PdfPCell(new Phrase(" ", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table1.addCell(table_cell1);

            //right side
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh:mm:ss a");
            java.util.Date printDate = new java.util.Date();
            dateFormat.format(printDate);
           
            table_cell1 = new PdfPCell(new Phrase("Print Date & Time :  " + dateFormat.format(printDate), new Font(Font.NORMAL, 11, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //table_cell6.setBorder(Rectangle.NO_BORDER);
            
            table_cell1.setBorder(com.lowagie.text.Rectangle.NO_BORDER);
            my_report_table1.addCell(table_cell1);
            
            
            
             PdfPTable my_report_table2 = new PdfPTable(1);
            //left side
            PdfPCell table_cell2 = new PdfPCell();
            my_report_table2.setWidthPercentage(100);

            table_cell2 = new PdfPCell(new Phrase("Student Name : " + name, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            
            PdfPTable my_report_table3 = new PdfPTable(1);
            //left side
            PdfPCell table_cell3 = new PdfPCell();
            my_report_table3.setWidthPercentage(100);

            table_cell3 = new PdfPCell(new Phrase("Student Roll : " + roll, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell3.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell3.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table3.addCell(table_cell3);
            
            
            
            PdfPTable my_report_table4 = new PdfPTable(1);
            //left side
            PdfPCell table_cell4 = new PdfPCell();
            my_report_table4.setWidthPercentage(100);

            table_cell4 = new PdfPCell(new Phrase("Registration No : " + regno, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell4.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell4.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table4.addCell(table_cell4);
            
            
            
            PdfPTable my_report_table11 = new PdfPTable(1);
            //left side
            PdfPCell table_cell11 = new PdfPCell();
            my_report_table11.setWidthPercentage(100);

            table_cell11 = new PdfPCell(new Phrase("Session : " + session, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell11.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell11.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table11.addCell(table_cell11);
            
            
            
            
            PdfPTable my_report_table50 = new PdfPTable(2);
            PdfPCell table_cell50 = new PdfPCell();

            table_cell50 = new PdfPCell(new Phrase("\n Date Of Issue : " + current + "\n\n", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell50.setHorizontalAlignment(Element.ALIGN_LEFT);
            //table_cell2.setBorder(Rectangle.NO_BORDER);
            table_cell50.setBorder(Rectangle.BOX);
            my_report_table50.addCell(table_cell50);

            table_cell50 = new PdfPCell(new Phrase("\n Date Of Withdrawn : " + withdraw + "\n\n", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell50.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell2.setBorder(Rectangle.NO_BORDER);
            table_cell50.setBorder(Rectangle.BOX);
            my_report_table50.addCell(table_cell50);

            
            PdfPTable my_report_table51 = new PdfPTable(1);
            PdfPCell table_cell51 = new PdfPCell();

            table_cell51 = new PdfPCell(new Phrase("\n Criteria : " + criteria + "\n\n", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell51.setHorizontalAlignment(Element.ALIGN_LEFT);
            //table_cell2.setBorder(Rectangle.NO_BORDER);
            table_cell51.setBorder(Rectangle.BOX);
            my_report_table51.addCell(table_cell51);


            PdfPTable my_report_table52 = new PdfPTable(2);
            PdfPCell table_cell52 = new PdfPCell();

            table_cell52 = new PdfPCell(new Phrase("\n Written By : " + wrtby + "\n\n", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell52.setHorizontalAlignment(Element.ALIGN_LEFT);
            //table_cell2.setBorder(Rectangle.NO_BORDER);
            table_cell52.setBorder(Rectangle.BOX);
            my_report_table52.addCell(table_cell52);

            table_cell52 = new PdfPCell(new Phrase("\n Checked By : " + chkby + "\n\n", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell52.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell2.setBorder(Rectangle.NO_BORDER);
            table_cell52.setBorder(Rectangle.BOX);
            my_report_table52.addCell(table_cell52);

            
            
            
            
            document.add(mainparagraph);
            document.add(paragraph3);
            document.add(my_report_table1);
            document.add(paragraph3);
            document.add(paragraph3);
            document.add(my_report_table2);
            document.add(my_report_table3);
            document.add(my_report_table4);
            document.add(my_report_table11);
            
            document.add(new Paragraph(" "));
            Paragraph Doc = new Paragraph("Document Report", new Font(Font.BOLD, 25, Font.BOLD,Color.DARK_GRAY));
            Doc.setAlignment(Element.ALIGN_CENTER);
            document.add(Doc);
            
            document.add(new Paragraph(" "));
            document.add(my_report_table51);
            document.add(my_report_table50);
            document.add(my_report_table52);
            
           
        }catch (DocumentException | HeadlessException e56) {
            System.err.println(e56.getMessage());
        }
        
        document.close();
    }
    
    
    private void jButton97ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton97ActionPerformed
        // TODO add your handling code here:
        
         try {
            print_document();
        } catch (SQLException | BadElementException | IOException ex) {
            Logger.getLogger(Panel_Document.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if (Desktop.isDesktopSupported()) {
            try {
                File myfile = new File("document.pdf");

                Desktop.getDesktop().open(myfile);
            } catch (IOException e17) {
                // JOptionPane.showMessageDialog(null, e17.toString());
            }
        }
    }//GEN-LAST:event_jButton97ActionPerformed

    private void jButton45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton45ActionPerformed
        // TODO add your handling code here:
        
        try {
            print_document();
        } catch (SQLException | BadElementException | IOException ex) {
            Logger.getLogger(Panel_Document.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if (Desktop.isDesktopSupported()) {
            try {
                File myfile = new File("document.pdf");

                Desktop.getDesktop().open(myfile);
            } catch (IOException e17) {
                // JOptionPane.showMessageDialog(null, e17.toString());
            }
        }
    }//GEN-LAST:event_jButton45ActionPerformed

    public void TableRefresh()
    {
        try{
            
                DefaultTableModel tb = (DefaultTableModel)TableDocument.getModel();
                int row=TableDocument.getRowCount();
                for(int i=row-1;i>=0;i--)
                {
                    tb.removeRow(i);
                }
            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    
    public void Refresh(){
       
        stuname.setText("");
        stuRoll.setText("");
        txtReg.setText("");
        jComboRoll.setSelectedItem("Select");
        jComboSession.setSelectedItem("Select");
        jComboSemester.setSelectedItem("Select");
        jDateCurrent.setDate(now);
        Withdraw.setDate(now);
        jCombocriteria.setSelectedItem("Select");
        jComboTeacher.setSelectedItem("Select");
        jCombochecked.setSelectedItem("Select");
        
    }
    
    public void TableShow()
    {
        try{
            
            DefaultTableModel tb = (DefaultTableModel)TableDocument.getModel();
            String sqlSearch = "SELECT * FROM document_info";
            prepstmnt = con.prepareStatement(sqlSearch);
            res = prepstmnt.executeQuery();
            
            while(res.next())
            {
                
                String Name = res.getString("Name");
                String roll = res.getString("Roll");
                String reg = res.getString("Reg");
                String session = res.getString("Session");
                String seme = res.getString("Semester");
                
                String issuedate = res.getString("DateOfIssue");
                String withdrawDate = res.getString("DateOWithDraw");
                String criteria = res.getString("criteria");
                String writtenby = res.getString("written_by");
                String chkedby = res.getString("Checked_By");
                
                
                tb.addRow(new Object[]{Name,roll,reg,session,seme,criteria,issuedate,withdrawDate,writtenby,chkedby});
                
            }
            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
           
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableDocument;
    private com.toedter.calendar.JDateChooser Withdraw;
    private javax.swing.JButton jButton108;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton46;
    private javax.swing.JButton jButton96;
    private javax.swing.JButton jButton97;
    private javax.swing.JButton jButton98;
    private javax.swing.JButton jButton99;
    private javax.swing.JComboBox jComboBox50;
    private javax.swing.JComboBox<String> jComboRoll;
    private javax.swing.JComboBox jComboSemester;
    private javax.swing.JComboBox jComboSession;
    private javax.swing.JComboBox jComboTeacher;
    private javax.swing.JComboBox jCombochecked;
    private javax.swing.JComboBox jCombocriteria;
    private com.toedter.calendar.JDateChooser jDateCurrent;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel139;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel92;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextField jTextFieldRollNo;
    private javax.swing.JTextField jTextFieldSearch;
    private javax.swing.JTextField stuRoll;
    private javax.swing.JTextField stuname;
    private javax.swing.JTextField txtReg;
    // End of variables declaration//GEN-END:variables
}
